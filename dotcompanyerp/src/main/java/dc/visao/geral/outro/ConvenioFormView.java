package dc.visao.geral.outro;

import org.vaadin.addons.maskedtextfield.MaskedTextField;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.geral.outro.ConvenioFormController;
import dc.entidade.geral.pessoal.PessoaEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneComboField;
import dc.visao.framework.util.ComponentUtil;

public class ConvenioFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private GridLayout fields;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private TextArea tfDescricao;

	@AutoGenerated
	private PopupDateField pdfDataCadastro;

	@AutoGenerated
	private MaskedTextField tfCep;
	
	@AutoGenerated
	private TextField tfTelefone, tfContato, tfCnpj;


	//@AutoGenerated
	//private ManyToOneCombo<UfEntity> mocUf;
	
	@AutoGenerated
	private ComboBox mocUf;

	@AutoGenerated
	private ManyToOneComboField<PessoaEntity> mocPessoa;

	@AutoGenerated
	private TextField tfMunicipioIBGE;

	@AutoGenerated
	private TextField tfBairro;

	@AutoGenerated
	private TextField tfNumero;

	@AutoGenerated
	private TextField tfLogradouro;

	@AutoGenerated
	private PopupDateField pdfDataVencimento;

	@AutoGenerated
	private TextField tfDesconto;

	@AutoGenerated
	private TextField tfNome;

	@AutoGenerated
	private TextField tfEmail;

	@AutoGenerated
	private TextField tfSite;

	private ConvenioFormController controller;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ConvenioFormView(ConvenioFormController controller) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		this.controller = controller;
	}

	public MaskedTextField getTfCep() {
		return tfCep;
	}

	public void setTfCep(MaskedTextField tfCep) {
		this.tfCep = tfCep;
	}

	public TextArea getTfDescricao() {
		return tfDescricao;
	}

	public void setTfDescricao(TextArea tfDescricao) {
		this.tfDescricao = tfDescricao;
	}

	public PopupDateField getPdfDataCadastro() {
		return pdfDataCadastro;
	}

	public void setPdfDataCadastro(PopupDateField pdfDataCadastro) {
		this.pdfDataCadastro = pdfDataCadastro;
	}

	public TextField getTfTelefone() {
		return tfTelefone;
	}

	public void setTfTelefone(TextField tfTelefone) {
		this.tfTelefone = tfTelefone;
	}

	public TextField getTfContato() {
		return tfContato;
	}

	public void setTfContato(TextField tfContato) {
		this.tfContato = tfContato;
	}

	public ComboBox getMocUf() {
		return mocUf;
	}

	public void setMocUf(ComboBox mocUf) {
		this.mocUf = mocUf;
	}

	public ManyToOneComboField<PessoaEntity> getMocPessoa() {
		return mocPessoa;
	}

	public void setMocPessoa(ManyToOneComboField<PessoaEntity> mocPessoa) {
		this.mocPessoa = mocPessoa;
	}

	public TextField getTfMunicipioIBGE() {
		return tfMunicipioIBGE;
	}

	public void setTfMunicipioIBGE(TextField tfMunicipioIBGE) {
		this.tfMunicipioIBGE = tfMunicipioIBGE;
	}

	public TextField getTfBairro() {
		return tfBairro;
	}

	public void setTfBairro(TextField tfBairro) {
		this.tfBairro = tfBairro;
	}

	public TextField getTfNumero() {
		return tfNumero;
	}

	public void setTfNumero(TextField tfNumero) {
		this.tfNumero = tfNumero;
	}

	public TextField getTfLogradouro() {
		return tfLogradouro;
	}

	public void setTfLogradouro(TextField tfLogradouro) {
		this.tfLogradouro = tfLogradouro;
	}

	public PopupDateField getPdfDataVencimento() {
		return pdfDataVencimento;
	}

	public void setPdfDataVencimento(PopupDateField pdfDataVencimento) {
		this.pdfDataVencimento = pdfDataVencimento;
	}

	public TextField getTfDesconto() {
		return tfDesconto;
	}

	public void setTfDesconto(TextField tfDesconto) {
		this.tfDesconto = tfDesconto;
	}

	public TextField getTfNome() {
		return tfNome;
	}

	public void setTfNome(TextField tfNome) {
		this.tfNome = tfNome;
	}

	public TextField getTfCnpj() {
		return tfCnpj;
	}

	public void setTfCnpj(TextField tfCnpj) {
		this.tfCnpj = tfCnpj;
	}

	public TextField getTfEmail() {
		return tfEmail;
	}

	public void setTfEmail(TextField tfEmail) {
		this.tfEmail = tfEmail;
	}

	public TextField getTfSite() {
		return tfSite;
	}

	public void setTfSite(TextField tfSite) {
		this.tfSite = tfSite;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		setSizeFull();
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		// setHeight("100.0%");

		fields = buildFields();

		mainLayout.addComponent(fields);

		return mainLayout;
	}

	private GridLayout buildFields() {
		fields = new GridLayout();
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(false);
		fields.setSpacing(true);
		fields.setRows(9);
		fields.setColumns(9);

		// mocPessoa
		mocPessoa = new ManyToOneComboField<>(PessoaEntity.class);
		mocPessoa.setCaption("Pessoa");
		fields.addComponent(mocPessoa, 0, 0);
		
		// txtNome
		tfNome = ComponentUtil.buildTextField("Nome");
		tfNome.setRequired(true);
		fields.addComponent(tfNome, 0, 1);
		
		// txtCnpj
		tfCnpj = ComponentUtil.buildCnpjField("CNPJ");
		fields.addComponent(tfCnpj, 1, 1);
		
		// txtLogradouro
		tfLogradouro = ComponentUtil.buildTextField("Logradouro");
		tfLogradouro.setRequired(true);
		fields.addComponent(tfLogradouro, 0, 2);
		
		// txtNumero
		tfNumero = ComponentUtil.buildTextField("Número");
		tfNumero.setImmediate(false);
		fields.addComponent(tfNumero, 1, 2);
		
		// txtBairro
		tfBairro = ComponentUtil.buildTextField("Bairro");
		tfBairro.setWidth("150px");
		fields.addComponent(tfBairro, 2, 2);
			
		// txtMunicipioIBGE
		tfMunicipioIBGE = ComponentUtil.buildTextField("Municipio IBGE");
		tfMunicipioIBGE.setWidth("150px");
		fields.addComponent(tfMunicipioIBGE, 3, 2);
		
		// txtCep
		tfCep = ComponentUtil.buildMaskedTextField("CEP", "#####-###");
		tfCep.setMaskClientOnly(true);
		fields.addComponent(tfCep, 0, 3);
		
		// cmbUF
		//mocUf = new ManyToOneCombo<>();
		//mocUf.setCaption("UF");
		mocUf = ComponentUtil.buildComboBox("UF");
		fields.addComponent(mocUf, 1, 3);
			
				
		// txtDesconto
		tfDesconto = ComponentUtil.buildTextField("Desconto");
		fields.addComponent(tfDesconto, 0, 4);

		// dnDataVencimento
		pdfDataVencimento = ComponentUtil.buildPopupDateField("Data Vencimento");
		fields.addComponent(pdfDataVencimento, 1, 4);
		
		// dnDataCadastro
		pdfDataCadastro = ComponentUtil.buildPopupDateField("Data Cadastro");
		fields.addComponent(pdfDataCadastro, 2, 4);


		// txtContato
		tfContato = ComponentUtil.buildPhoneField("Contato");
		fields.addComponent(tfContato, 0, 5);

		// txtTelefone
		tfTelefone = ComponentUtil.buildPhoneField("Telefone");
		fields.addComponent(tfTelefone, 1, 5);
		
		// txtEmail
		tfEmail = ComponentUtil.buildTextField("Email");
		fields.addComponent(tfEmail, 0, 6);

		// txtSite
		tfSite = ComponentUtil.buildTextField("Site");
		fields.addComponent(tfSite, 1, 6);

		// txtDescricao
		tfDescricao = ComponentUtil.buildTextArea("Descrição");
		fields.addComponent(tfDescricao, 0, 7 , 3, 7);

		return fields;
	}
}