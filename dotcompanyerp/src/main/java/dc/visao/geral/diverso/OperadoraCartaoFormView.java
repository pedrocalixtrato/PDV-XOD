package dc.visao.geral.diverso;

import org.vaadin.addons.maskedtextfield.MaskedTextField;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.geral.diverso.OperadoraCartaoFormController;
import dc.entidade.financeiro.ContaCaixa;
import dc.entidade.geral.diverso.OperadoraCartaoEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneComboField;
import dc.visao.framework.util.ComponentUtil;

public class OperadoraCartaoFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private Panel panel_1;

	@AutoGenerated
	private VerticalLayout verticalLayout_2;

	@AutoGenerated
	private GridLayout gridLayout_1;

	@AutoGenerated
	private MaskedTextField tfTelefone2, tfTelefone1;


	@AutoGenerated
	private TextField tfVencimentoAluguel;

	@AutoGenerated
	private TextField tfValorAluguelPosPin;

	@AutoGenerated
	private TextField tfTaxaAdmDebito;

	@AutoGenerated
	private TextField tfTaxaAdm;

	@AutoGenerated
	private TextField tfNome;

	@AutoGenerated
	private TextField tfBandeira;

	@AutoGenerated
	private ManyToOneComboField<ContaCaixa> mocContaCaixa;

	private OperadoraCartaoFormController controller;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public OperadoraCartaoFormView(OperadoraCartaoFormController controller) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.controller = controller;
	}

	public MaskedTextField getTfTelefone2() {
		return tfTelefone2;
	}

	public void setTfTelefone2(MaskedTextField tfTelefone2) {
		this.tfTelefone2 = tfTelefone2;
	}

	public MaskedTextField getTfTelefone1() {
		return tfTelefone1;
	}

	public void setTfTelefone1(MaskedTextField tfTelefone1) {
		this.tfTelefone1 = tfTelefone1;
	}

	public TextField getTfVencimentoAluguel() {
		return tfVencimentoAluguel;
	}

	public void setTfVencimentoAluguel(TextField tfVencimentoAluguel) {
		this.tfVencimentoAluguel = tfVencimentoAluguel;
	}

	public TextField getTfValorAluguelPosPin() {
		return tfValorAluguelPosPin;
	}

	public void setTfValorAluguelPosPin(TextField tfValorAluguelPosPin) {
		this.tfValorAluguelPosPin = tfValorAluguelPosPin;
	}

	public TextField getTfTaxaAdmDebito() {
		return tfTaxaAdmDebito;
	}

	public void setTfTaxaAdmDebito(TextField tfTaxaAdmDebito) {
		this.tfTaxaAdmDebito = tfTaxaAdmDebito;
	}

	public TextField getTfTaxaAdm() {
		return tfTaxaAdm;
	}

	public void setTfTaxaAdm(TextField tfTaxaAdm) {
		this.tfTaxaAdm = tfTaxaAdm;
	}

	public TextField getTfNome() {
		return tfNome;
	}

	public void setTfNome(TextField tfNome) {
		this.tfNome = tfNome;
	}

	public TextField getTfBandeira() {
		return tfBandeira;
	}

	public void setTfBandeira(TextField tfBandeira) {
		this.tfBandeira = tfBandeira;
	}

	public ManyToOneComboField<ContaCaixa> getMocContaCaixa() {
		return mocContaCaixa;
	}

	public void setMocContaCaixa(ManyToOneComboField<ContaCaixa> mocContaCaixa) {
		this.mocContaCaixa = mocContaCaixa;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		// mainLayout.setWidth("100%");
		// mainLayout.setHeight("100%");
		mainLayout.setSizeFull();
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		// setHeight("100.0%");

		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("100.0%");

		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_1.setContent(verticalLayout_2);

		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(false);

		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		verticalLayout_2.addComponent(gridLayout_1);

		return verticalLayout_2;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setMargin(false);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setRows(20);
		gridLayout_1.setColumns(5);

		// mocContaCaixa
		mocContaCaixa = new ManyToOneComboField<>(ContaCaixa.class);
		mocContaCaixa.setCaption("Conta da caixa");
		mocContaCaixa.setImmediate(false);
		gridLayout_1.addComponent(mocContaCaixa, 0, 0, 1, 0);

		// tfBandeira
		tfBandeira = ComponentUtil.buildTextField("Bandeira");
		tfBandeira.setImmediate(false);
		gridLayout_1.addComponent(tfBandeira, 0, 2);

		// tfNome
		tfNome = ComponentUtil.buildTextField("Nome");
		tfNome.setImmediate(false);
		gridLayout_1.addComponent(tfNome, 1, 2);

		// tfTaxaAdm
		tfTaxaAdm = ComponentUtil.buildCurrencyField("Taxa administrativa");
		tfTaxaAdm.setImmediate(false);
		gridLayout_1.addComponent(tfTaxaAdm, 0, 3);

		// tfTaxaAdmDebito
		tfTaxaAdmDebito = ComponentUtil
				.buildCurrencyField("Taxa administrativa d√©bito");
		tfTaxaAdmDebito.setImmediate(false);
		gridLayout_1.addComponent(tfTaxaAdmDebito, 1, 3);

		// tfValorAluguelPosPin
		tfValorAluguelPosPin = ComponentUtil
				.buildCurrencyField("Valor do aluguel pos pin");
		tfValorAluguelPosPin.setImmediate(false);
		gridLayout_1.addComponent(tfValorAluguelPosPin, 2, 3);

		// tfVencimentoAluguel
		tfVencimentoAluguel = ComponentUtil
				.buildTextField("Vencimento do aluguel");
		tfVencimentoAluguel.setImmediate(false);
		// tfVencimentoAluguel.setConverter(new IntegerConverter());
		gridLayout_1.addComponent(tfVencimentoAluguel, 3, 3);

		// tfTelefone1
		tfTelefone1 = ComponentUtil.buildMaskedTextField("Telefone comercial",	"(##) #####-####");
		tfTelefone1.setMaskClientOnly(true);
		tfTelefone1.setImmediate(false);
		gridLayout_1.addComponent(tfTelefone1, 0, 4);

		// tfTelefone2
		tfTelefone2 = ComponentUtil.buildMaskedTextField("Telefone 2", "(##) #####-####");
		tfTelefone2.setMaskClientOnly(true);
		tfTelefone2.setImmediate(false);
		gridLayout_1.addComponent(tfTelefone2, 1, 4);

		return gridLayout_1;
	}

	public void preencheOperadoraCartao(OperadoraCartaoEntity operadoraCartao) {
		
	}

	public void preencheOperadoraCartaoForm(
			OperadoraCartaoEntity operadoraCartao) {
		

	}

}