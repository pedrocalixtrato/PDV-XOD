package dc.visao.geral.diverso;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.geral.diverso.UfFormController;
import dc.entidade.geral.diverso.PaisEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneComboField;
import dc.visao.framework.util.ComponentUtil;

public class UfFormView extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private GridLayout fields;

	@AutoGenerated
	private TextField tfCodigoIbge;

	@AutoGenerated
	private TextField tfSigla;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private TextField tfNome;

	@AutoGenerated
	private ManyToOneComboField<PaisEntity> mocPais;

	private UfFormController controller;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public UfFormView(UfFormController controller) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.controller = controller;
	}

	public TextField getTfCodigoIbge() {
		return tfCodigoIbge;
	}

	public void setTfCodigoIbge(TextField tfCodigoIbge) {
		this.tfCodigoIbge = tfCodigoIbge;
	}

	public TextField getTfSigla() {
		return tfSigla;
	}

	public void setTfSigla(TextField tfSigla) {
		this.tfSigla = tfSigla;
	}

	public TextField getTfNome() {
		return tfNome;
	}

	public void setTfNome(TextField tfNome) {
		this.tfNome = tfNome;
	}

	public ManyToOneComboField<PaisEntity> getMocPais() {
		return mocPais;
	}

	public void setMocPais(ManyToOneComboField<PaisEntity> mocPais) {
		this.mocPais = mocPais;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		setSizeFull();
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		// setHeight("100.0%");

		fields = buildFields();

		mainLayout.addComponent(fields);

		return mainLayout;
	}

	private GridLayout buildFields() {
		fields = new GridLayout();
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(false);
		fields.setSpacing(true);
		fields.setRows(4);
		fields.setColumns(4);

		// mocPais
		mocPais = new ManyToOneComboField<>(PaisEntity.class);
		mocPais.setCaption("País");
		fields.addComponent(mocPais, 0,0);

		// tfNome
		tfNome = ComponentUtil.buildTextField("Nome");
		tfNome.setImmediate(false);
		fields.addComponent(tfNome, 0,1);

		// tfSigla
		tfSigla = ComponentUtil.buildTextField("Sigla");
		fields.addComponent(tfSigla, 0, 2);

		// tfCodigoIbge
		tfCodigoIbge = ComponentUtil.buildTextField("Código IBGE");
		tfCodigoIbge.setImmediate(false);
		fields.addComponent(tfCodigoIbge, 1, 2);

		return fields;
	}

}