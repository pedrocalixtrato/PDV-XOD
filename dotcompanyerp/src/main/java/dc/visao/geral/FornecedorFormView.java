package dc.visao.geral;

import org.vaadin.addons.maskedtextfield.NumericField;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.geral.pessoal.FornecedorFormController;
import dc.entidade.geral.pessoal.AtividadeForCliEntity;
import dc.entidade.geral.pessoal.PessoaEntity;
import dc.entidade.geral.pessoal.SituacaoForCliEntity;
import dc.visao.framework.component.IntegerConverter;
import dc.visao.framework.component.manytoonecombo.ManyToOneComboField;
import dc.visao.framework.util.ComponentUtil;

public class FornecedorFormView extends CustomComponent {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;
	private GridLayout gridLayout_1;
	
	@AutoGenerated
	private ComboBox cbGerarFaturamento, cbOptanteSimples, cbLocalizacao, cbSofreRentencao;
	
	@AutoGenerated
	private TextField  tfContaRemetente, tfChequeNominalA;
	
	@AutoGenerated
	private NumericField tfPrazoMedioEntrega, tfNumDiasPrimeiroVenc, tfNumDiasIntervalo, tfQuantidadesParcelas;
	
	@AutoGenerated
	private TextArea taObservacao;
	
	@AutoGenerated
	private PopupDateField pdfDesde;
	
	@AutoGenerated
	private ManyToOneComboField<PessoaEntity> mocPessoa;

	@AutoGenerated
	private ManyToOneComboField<SituacaoForCliEntity> mocSituacaoForCli;

	@AutoGenerated
	private ManyToOneComboField<AtividadeForCliEntity> mocAtividadeForCli;
	
	FornecedorFormController controller;


	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public FornecedorFormView(FornecedorFormController controller) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.controller = controller;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		setSizeFull();
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		setWidth("100.0%");
	
		gridLayout_1 = buildGridLayout_1();
		mainLayout.addComponent(gridLayout_1);
		
		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {

		gridLayout_1 = new GridLayout(7, 7);
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setRows(7);
		gridLayout_1.setColumns(7);
		
		// mocPessoa
		mocPessoa = new ManyToOneComboField<>(PessoaEntity.class);
		mocPessoa.setCaption("Pessoa");
		mocPessoa.setImmediate(false);
		gridLayout_1.addComponent(mocPessoa,0,0,1,0);
		
		// mocSituacao
		mocSituacaoForCli = new ManyToOneComboField<>(SituacaoForCliEntity.class);
		mocSituacaoForCli.setCaption("Situação Fornecedor");
		mocSituacaoForCli.setImmediate(false);
		gridLayout_1.addComponent(mocSituacaoForCli,2,0);
		
		// mocAtividade
		mocAtividadeForCli = new ManyToOneComboField<>(AtividadeForCliEntity.class);
		mocAtividadeForCli.setCaption("Atividade Fornecedor");
		mocAtividadeForCli.setImmediate(false);
		gridLayout_1.addComponent(mocAtividadeForCli, 0,1,1,1);
		
		// pdfDesde
		pdfDesde = ComponentUtil.buildPopupDateField("Desde");
		pdfDesde.setImmediate(false);
		gridLayout_1.addComponent(pdfDesde, 0,2);

		// tfContaTomador
		tfContaRemetente = ComponentUtil.buildTextField("Conta do Remetente");
		tfContaRemetente.setImmediate(false);
		gridLayout_1.addComponent(tfContaRemetente, 1,2);

		// cbGerarFinanceiro
		cbGerarFaturamento  = ComponentUtil.buildComboBox("Gerar faturamento?");
		cbGerarFaturamento .setImmediate(false);
		gridLayout_1.addComponent(cbGerarFaturamento , 2,2);

		// cbIndicadorPreco
		cbOptanteSimples  = ComponentUtil.buildComboBox("Optante Simples");
		cbOptanteSimples .setImmediate(false);
		gridLayout_1.addComponent(cbOptanteSimples , 3,2);
			
		// cbTipoFrete
		cbLocalizacao  = ComponentUtil.buildComboBox("Localização");
		cbLocalizacao .setImmediate(false);
		gridLayout_1.addComponent(cbLocalizacao , 0,3);
		
		cbSofreRentencao  = ComponentUtil.buildComboBox("Sofre Retenção ?");
		cbSofreRentencao .setImmediate(false);
		gridLayout_1.addComponent(cbSofreRentencao , 1,3);

		tfPrazoMedioEntrega  = ComponentUtil.buildNumericField("Prazo Médio Entrega");
		tfPrazoMedioEntrega .setImmediate(false);
		tfPrazoMedioEntrega.setConverter(new IntegerConverter());
		gridLayout_1.addComponent(tfPrazoMedioEntrega , 2,3);

		tfNumDiasPrimeiroVenc  = ComponentUtil.buildNumericField("Núm. Dias 1º Vencimento");
		tfNumDiasPrimeiroVenc .setImmediate(false);
		tfNumDiasPrimeiroVenc.setConverter(new IntegerConverter());
		gridLayout_1.addComponent(tfNumDiasPrimeiroVenc , 3,3);
		
		tfNumDiasIntervalo = ComponentUtil
				.buildNumericField("Núm. Dias Intervalo");
		tfNumDiasIntervalo.setConverter(new IntegerConverter());
		gridLayout_1.addComponent(tfNumDiasIntervalo, 0, 4);

		tfQuantidadesParcelas = ComponentUtil
				.buildNumericField("Quantidade Parcelas");
		tfQuantidadesParcelas.setConverter(new IntegerConverter());
		gridLayout_1.addComponent(tfQuantidadesParcelas, 1, 4);

		tfChequeNominalA = ComponentUtil.buildTextField("Cheque Nominal à");
		gridLayout_1.addComponent(tfChequeNominalA, 2, 4, 4, 4);

		taObservacao = ComponentUtil.buildTextArea("Observação");
		gridLayout_1.addComponent(taObservacao, 0, 5, 4, 5);


		return gridLayout_1;
	}

	public ComboBox getCbGerarFaturamento() {
		return cbGerarFaturamento;
	}

	public void setCbGerarFaturamento(ComboBox cbGerarFaturamento) {
		this.cbGerarFaturamento = cbGerarFaturamento;
	}

	public ComboBox getCbOptanteSimples() {
		return cbOptanteSimples;
	}

	public void setCbOptanteSimples(ComboBox cbOptanteSimples) {
		this.cbOptanteSimples = cbOptanteSimples;
	}

	public ComboBox getCbLocalizacao() {
		return cbLocalizacao;
	}

	public void setCbLocalizacao(ComboBox cbLocalizacao) {
		this.cbLocalizacao = cbLocalizacao;
	}

	public ComboBox getCbSofreRentencao() {
		return cbSofreRentencao;
	}

	public void setCbSofreRentencao(ComboBox cbSofreRentencao) {
		this.cbSofreRentencao = cbSofreRentencao;
	}

	public TextField getTfContaRemetente() {
		return tfContaRemetente;
	}

	public void setTfContaRemetente(TextField tfContaRemetente) {
		this.tfContaRemetente = tfContaRemetente;
	}

	public TextField getTfPrazoMedioEntrega() {
		return tfPrazoMedioEntrega;
	}

	public void setTfPrazoMedioEntrega(NumericField tfPrazoMedioEntrega) {
		this.tfPrazoMedioEntrega = tfPrazoMedioEntrega;
	}

	public NumericField getTfNumDiasPrimeiroVenc() {
		return tfNumDiasPrimeiroVenc;
	}

	public void setTfNumDiasPrimeiroVenc(NumericField tfNumDiasPrimeiroVenc) {
		this.tfNumDiasPrimeiroVenc = tfNumDiasPrimeiroVenc;
	}

	public NumericField getTfNumDiasIntervalo() {
		return tfNumDiasIntervalo;
	}

	public void setTfNumDiasIntervalo(NumericField tfNumDiasIntervalo) {
		this.tfNumDiasIntervalo = tfNumDiasIntervalo;
	}

	public NumericField getTfQuantidadesParcelas() {
		return tfQuantidadesParcelas;
	}

	public void setTfQuantidadesParcelas(NumericField tfQuantidadesParcelas) {
		this.tfQuantidadesParcelas = tfQuantidadesParcelas;
	}

	public TextField getTfChequeNominalA() {
		return tfChequeNominalA;
	}

	public void setTfChequeNominalA(TextField tfChequeNominalA) {
		this.tfChequeNominalA = tfChequeNominalA;
	}

	public TextArea getTaObservacao() {
		return taObservacao;
	}

	public void setTaObservacao(TextArea taObservacao) {
		this.taObservacao = taObservacao;
	}

	public PopupDateField getPdfDesde() {
		return pdfDesde;
	}

	public void setPdfDesde(PopupDateField pdfDesde) {
		this.pdfDesde = pdfDesde;
	}

	public ManyToOneComboField<PessoaEntity> getMocPessoa() {
		return mocPessoa;
	}

	public void setMocPessoa(ManyToOneComboField<PessoaEntity> mocPessoa) {
		this.mocPessoa = mocPessoa;
	}

	public ManyToOneComboField<SituacaoForCliEntity> getMocSituacaoForCli() {
		return mocSituacaoForCli;
	}

	public void setMocSituacaoForCli(
			ManyToOneComboField<SituacaoForCliEntity> mocSituacaoForCli) {
		this.mocSituacaoForCli = mocSituacaoForCli;
	}

	public ManyToOneComboField<AtividadeForCliEntity> getMocAtividadeForCli() {
		return mocAtividadeForCli;
	}

	public void setMocAtividadeForCli(
			ManyToOneComboField<AtividadeForCliEntity> mocAtividadeForCli) {
		this.mocAtividadeForCli = mocAtividadeForCli;
	}
	
}
