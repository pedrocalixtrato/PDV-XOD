package dc.visao.geral.pessoal;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.geral.pessoal.ColaboradorFormController;
import dc.entidade.contabilidade.planoconta.PlanoContaEntity;
import dc.entidade.financeiro.ContaCaixa;
import dc.entidade.geral.diverso.SetorEntity;
import dc.entidade.geral.outro.SindicatoEntity;
import dc.entidade.geral.pessoal.CargoEntity;
import dc.entidade.geral.pessoal.NivelFormacaoEntity;
import dc.entidade.geral.pessoal.PessoaEntity;
import dc.entidade.geral.pessoal.SituacaoColaboradorEntity;
import dc.entidade.geral.pessoal.TipoColaboradorEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneComboField;
import dc.visao.framework.util.ComponentUtil;

public class ColaboradorFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_8;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_7;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_6;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_5;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_4;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_3;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;

	@AutoGenerated
	private TextArea tfObservacao;

	@AutoGenerated
	private PopupDateField pdfDataExpedida;

	@AutoGenerated
	private TextField tfSerie;

	@AutoGenerated
	private TextField tfNumeroCarteira;

	@AutoGenerated
	private TextField tfDigitoAgencia1;

	@AutoGenerated
	private TextField tfAgencia1;

	@AutoGenerated
	private TextField tfBanco1;

	@AutoGenerated
	private TextField tfNumeroPis;

	@AutoGenerated
	private PopupDateField pdfDataCadastroPis;

	@AutoGenerated
	private TextField tfDigitoConta;

	@AutoGenerated
	private TextField tfConta;

	@AutoGenerated
	private TextField tfDigitoAgencia;

	@AutoGenerated
	private TextField tfAgencia;

	@AutoGenerated
	private TextField tfBanco;

	@AutoGenerated
	private ComboBox cbFormaPagamento;

	@AutoGenerated
	private TextField tfCodigoDemissaoCaged;

	@AutoGenerated
	private TextField tfCodigoAdmissao;

	@AutoGenerated
	private PopupDateField pdfDataOpcao;

	@AutoGenerated
	private ComboBox cbOptante;

	@AutoGenerated
	private TextField tfCodigoDemissao;

	@AutoGenerated
	private TextField tfOcorrencia;

	@AutoGenerated
	private TextField tfCategoria;

	@AutoGenerated
	private TextField tfSalarioFixo;

	@AutoGenerated
	private TextField tfComissaoProduto;

	@AutoGenerated
	private TextField tfComissaoServico;

	@AutoGenerated
	private PopupDateField pdfDataVencimento;

	@AutoGenerated
	private PopupDateField pdfDataUltimoExame;

	@AutoGenerated
	private TextField tfCodigoTurma;

	@AutoGenerated
	private ComboBox cbSaiRais;

	@AutoGenerated
	private ComboBox cbDescontoPlanoSaude;

	@AutoGenerated
	private PopupDateField pdfDataDemissao;

	@AutoGenerated
	private PopupDateField pdfDataTransferencia;

	@AutoGenerated
	private PopupDateField pdfDataVencimentoFerias;

	@AutoGenerated
	private PopupDateField pdfDataAdmissao;

	@AutoGenerated
	private PopupDateField pdfDataCadastro;

	@AutoGenerated
	private TextField tfMatricula;

	@AutoGenerated
	private ComboBox cbPriorizarPgto;

	@AutoGenerated
	private ComboBox cbComissaoOver;

	@AutoGenerated
	private ComboBox cbPgtoComissao;

	@AutoGenerated
	private ComboBox cbLctoComissao;

	@AutoGenerated
	private OptionGroup ogTipoComissaoServico;

	@AutoGenerated
	private OptionGroup ogTipoComissaoProduto;

	@AutoGenerated
	private TabSheet subForms;

	@AutoGenerated
	private ManyToOneComboField<PessoaEntity> mocPessoa;

	@AutoGenerated
	private ManyToOneComboField<TipoColaboradorEntity> mocTipoColaborador;

	@AutoGenerated
	private ManyToOneComboField<SituacaoColaboradorEntity> mocSituacaoColaborador;

	@AutoGenerated
	private ManyToOneComboField<SindicatoEntity> mocSindicato;

	@AutoGenerated
	private ManyToOneComboField<NivelFormacaoEntity> mocNivelFormacao;

	@AutoGenerated
	private ManyToOneComboField<CargoEntity> mocCargo;

	@AutoGenerated
	private ManyToOneComboField<SetorEntity> mocSetor;

	@AutoGenerated
	private ManyToOneComboField<PlanoContaEntity> mocPlanoConta;

	@AutoGenerated
	private ManyToOneComboField<ContaCaixa> mocContaCaixa;

	@AutoGenerated
	private ComboBox mocUf;

	ColaboradorFormController controller;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ColaboradorFormView(ColaboradorFormController controller) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.controller = controller;
	}

	public TextArea getTfObservacao() {
		return tfObservacao;
	}

	public void setTfObservacao(TextArea tfObservacao) {
		this.tfObservacao = tfObservacao;
	}

	public PopupDateField getPdfDataExpedida() {
		return pdfDataExpedida;
	}

	public void setPdfDataExpedida(PopupDateField pdfDataExpedida) {
		this.pdfDataExpedida = pdfDataExpedida;
	}

	public TextField getTfSerie() {
		return tfSerie;
	}

	public void setTfSerie(TextField tfSerie) {
		this.tfSerie = tfSerie;
	}

	public TextField getTfNumeroCarteira() {
		return tfNumeroCarteira;
	}

	public void setTfNumeroCarteira(TextField tfNumeroCarteira) {
		this.tfNumeroCarteira = tfNumeroCarteira;
	}

	public TextField getTfDigitoAgencia() {
		return tfDigitoAgencia;
	}

	public void setTfDigitoAgencia(TextField tfDigitoAgencia) {
		this.tfDigitoAgencia = tfDigitoAgencia;
	}

	public TextField getTfAgencia1() {
		return tfAgencia1;
	}

	public void setTfAgencia1(TextField tfAgencia1) {
		this.tfAgencia1 = tfAgencia1;
	}

	public TextField getTfBanco1() {
		return tfBanco1;
	}

	public void setTfBanco1(TextField tfBanco1) {
		this.tfBanco1 = tfBanco1;
	}

	public TextField getTfNumeroPis() {
		return tfNumeroPis;
	}

	public void setTfNumeroPis(TextField tfNumeroPis) {
		this.tfNumeroPis = tfNumeroPis;
	}

	public PopupDateField getPdfDataCadastroPis() {
		return pdfDataCadastroPis;
	}

	public void setPdfDataCadastroPis(PopupDateField pdfDataCadastroPis) {
		this.pdfDataCadastroPis = pdfDataCadastroPis;
	}

	public TextField getTfDigitoAgencia1() {
		return tfDigitoAgencia1;
	}

	public void setTfDigitoAgencia1(TextField tfDigitoAgencia1) {
		this.tfDigitoAgencia1 = tfDigitoAgencia1;
	}

	public TextField getTfDigitoConta() {
		return tfDigitoConta;
	}

	public void setTfDigitoConta(TextField tfDigitoConta) {
		this.tfDigitoConta = tfDigitoConta;
	}

	public TextField getTfConta() {
		return tfConta;
	}

	public void setTfConta(TextField tfConta) {
		this.tfConta = tfConta;
	}

	public TextField getTfAgencia() {
		return tfAgencia;
	}

	public void setTfAgencia(TextField tfAgencia) {
		this.tfAgencia = tfAgencia;
	}

	public TextField getTfBanco() {
		return tfBanco;
	}

	public void setTfBanco(TextField tfBanco) {
		this.tfBanco = tfBanco;
	}

	public ComboBox getCbFormaPagamento() {
		return cbFormaPagamento;
	}

	public void setCbFormaPagamento(ComboBox cbFormaPagamento) {
		this.cbFormaPagamento = cbFormaPagamento;
	}

	public TextField getTfCodigoDemissaoCaged() {
		return tfCodigoDemissaoCaged;
	}

	public void setTfCodigoDemissaoCaged(TextField tfCodigoDemissaoCaged) {
		this.tfCodigoDemissaoCaged = tfCodigoDemissaoCaged;
	}

	public TextField getTfCodigoAdmissao() {
		return tfCodigoAdmissao;
	}

	public void setTfCodigoAdmissao(TextField tfCodigoAdmissao) {
		this.tfCodigoAdmissao = tfCodigoAdmissao;
	}

	public PopupDateField getPdfDataOpcao() {
		return pdfDataOpcao;
	}

	public void setPdfDataOpcao(PopupDateField pdfDataOpcao) {
		this.pdfDataOpcao = pdfDataOpcao;
	}

	public ComboBox getCbOptante() {
		return cbOptante;
	}

	public void setCbOptante(ComboBox cbOptante) {
		this.cbOptante = cbOptante;
	}

	public TextField getTfCodigoDemissao() {
		return tfCodigoDemissao;
	}

	public void setTfCodigoDemissao(TextField tfCodigoDemissao) {
		this.tfCodigoDemissao = tfCodigoDemissao;
	}

	public TextField getTfOcorrencia() {
		return tfOcorrencia;
	}

	public void setTfOcorrencia(TextField tfOcorrencia) {
		this.tfOcorrencia = tfOcorrencia;
	}

	public TextField getTfCategoria() {
		return tfCategoria;
	}

	public void setTfCategoria(TextField tfCategoria) {
		this.tfCategoria = tfCategoria;
	}

	public TextField getTfSalarioFixo() {
		return tfSalarioFixo;
	}

	public void setTfSalarioFixo(TextField tfSalarioFixo) {
		this.tfSalarioFixo = tfSalarioFixo;
	}

	public TextField getTfComissaoProduto() {
		return tfComissaoProduto;
	}

	public void setTfComissaoProduto(TextField tfComissaoProduto) {
		this.tfComissaoProduto = tfComissaoProduto;
	}

	public TextField getTfComissaoServico() {
		return tfComissaoServico;
	}

	public void setTfComissaoServico(TextField tfComissaoServico) {
		this.tfComissaoServico = tfComissaoServico;
	}

	public PopupDateField getPdfDataVencimento() {
		return pdfDataVencimento;
	}

	public void setPdfDataVencimento(PopupDateField pdfDataVencimento) {
		this.pdfDataVencimento = pdfDataVencimento;
	}

	public PopupDateField getPdfDataUltimoExame() {
		return pdfDataUltimoExame;
	}

	public void setPdfDataUltimoExame(PopupDateField pdfDataUltimoExame) {
		this.pdfDataUltimoExame = pdfDataUltimoExame;
	}

	public TextField getTfCodigoTurma() {
		return tfCodigoTurma;
	}

	public void setTfCodigoTurma(TextField tfCodigoTurma) {
		this.tfCodigoTurma = tfCodigoTurma;
	}

	public ComboBox getCbSaiRais() {
		return cbSaiRais;
	}

	public void setCbSaiRais(ComboBox cbSaiRais) {
		this.cbSaiRais = cbSaiRais;
	}

	public ComboBox getCbDescontoPlanoSaude() {
		return cbDescontoPlanoSaude;
	}

	public void setCbDescontoPlanoSaude(ComboBox cbDescontoPlanoSaude) {
		this.cbDescontoPlanoSaude = cbDescontoPlanoSaude;
	}

	public PopupDateField getPdfDataDemissao() {
		return pdfDataDemissao;
	}

	public void setPdfDataDemissao(PopupDateField pdfDataDemissao) {
		this.pdfDataDemissao = pdfDataDemissao;
	}

	public PopupDateField getPdfDataTransferencia() {
		return pdfDataTransferencia;
	}

	public void setPdfDataTransferencia(PopupDateField pdfDataTransferencia) {
		this.pdfDataTransferencia = pdfDataTransferencia;
	}

	public PopupDateField getPdfDataVencimentoFerias() {
		return pdfDataVencimentoFerias;
	}

	public void setPdfDataVencimentoFerias(
			PopupDateField pdfDataVencimentoFerias) {
		this.pdfDataVencimentoFerias = pdfDataVencimentoFerias;
	}

	public PopupDateField getPdfDataAdmissao() {
		return pdfDataAdmissao;
	}

	public void setPdfDataAdmissao(PopupDateField pdfDataAdmissao) {
		this.pdfDataAdmissao = pdfDataAdmissao;
	}

	public PopupDateField getPdfDataCadastro() {
		return pdfDataCadastro;
	}

	public void setPdfDataCadastro(PopupDateField pdfDataCadastro) {
		this.pdfDataCadastro = pdfDataCadastro;
	}

	public TextField getTfMatricula() {
		return tfMatricula;
	}

	public void setTfMatricula(TextField tfMatricula) {
		this.tfMatricula = tfMatricula;
	}

	public ComboBox getCbComissaoOver() {
		return cbComissaoOver;
	}

	public void setCbComissaoOver(ComboBox cbComissaoOver) {
		this.cbComissaoOver = cbComissaoOver;
	}

	public ComboBox getCbLctoComissao() {
		return cbLctoComissao;
	}

	public void setCbLctoComissao(ComboBox cbLctoComissao) {
		this.cbLctoComissao = cbLctoComissao;
	}

	public ComboBox getCbPgtoComissao() {
		return cbPgtoComissao;
	}

	public void setCbPgtoComissao(ComboBox cbPgtoComissao) {
		this.cbPgtoComissao = cbPgtoComissao;
	}

	public ComboBox getCbPriorizarPgto() {
		return cbPriorizarPgto;
	}

	public void setCbPriorizarPgto(ComboBox cbPriorizarPgto) {
		this.cbPriorizarPgto = cbPriorizarPgto;
	}

	public ManyToOneComboField<PessoaEntity> getMocPessoa() {
		return mocPessoa;
	}

	public void setMocPessoa(ManyToOneComboField<PessoaEntity> mocPessoa) {
		this.mocPessoa = mocPessoa;
	}

	public ManyToOneComboField<TipoColaboradorEntity> getMocTipoColaborador() {
		return mocTipoColaborador;
	}

	public void setMocTipoColaborador(
			ManyToOneComboField<TipoColaboradorEntity> mocTipoColaborador) {
		this.mocTipoColaborador = mocTipoColaborador;
	}

	public ManyToOneComboField<SituacaoColaboradorEntity> getMocSituacaoColaborador() {
		return mocSituacaoColaborador;
	}

	public void setMocSituacaoColaborador(
			ManyToOneComboField<SituacaoColaboradorEntity> mocSituacaoColaborador) {
		this.mocSituacaoColaborador = mocSituacaoColaborador;
	}

	public ManyToOneComboField<SindicatoEntity> getMocSindicato() {
		return mocSindicato;
	}

	public void setMocSindicato(ManyToOneComboField<SindicatoEntity> mocSindicato) {
		this.mocSindicato = mocSindicato;
	}

	public ManyToOneComboField<NivelFormacaoEntity> getMocNivelFormacao() {
		return mocNivelFormacao;
	}

	public void setMocNivelFormacao(
			ManyToOneComboField<NivelFormacaoEntity> mocNivelFormacao) {
		this.mocNivelFormacao = mocNivelFormacao;
	}

	public ManyToOneComboField<CargoEntity> getMocCargo() {
		return mocCargo;
	}

	public void setMocCargo(ManyToOneComboField<CargoEntity> mocCargo) {
		this.mocCargo = mocCargo;
	}

	public ManyToOneComboField<SetorEntity> getMocSetor() {
		return mocSetor;
	}

	public void setMocSetor(ManyToOneComboField<SetorEntity> mocSetor) {
		this.mocSetor = mocSetor;
	}

	public ManyToOneComboField<ContaCaixa> getMocContaCaixa() {
		return mocContaCaixa;
	}

	public void setMocContaCaixa(ManyToOneComboField<ContaCaixa> mocContaCaixa) {
		this.mocContaCaixa = mocContaCaixa;
	}

	public ManyToOneComboField<PlanoContaEntity> getMocPlanoConta() {
		return mocPlanoConta;
	}

	public void setMocPlanoConta(ManyToOneComboField<PlanoContaEntity> mocPlanoConta) {
		this.mocPlanoConta = mocPlanoConta;
	}

	public OptionGroup getOgTipoComissaoProduto() {
		return ogTipoComissaoProduto;
	}

	public void setOgTipoComissaoProduto(OptionGroup ogTipoComissaoProduto) {
		this.ogTipoComissaoProduto = ogTipoComissaoProduto;
	}

	public OptionGroup getOgTipoComissaoServico() {
		return ogTipoComissaoServico;
	}

	public void setOgTipoComissaoServico(OptionGroup ogTipoComissaoServico) {
		this.ogTipoComissaoServico = ogTipoComissaoServico;
	}

	public ComboBox getMocUf() {
		return mocUf;
	}

	public void setMocUf(ComboBox mocUf) {
		this.mocUf = mocUf;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		setSizeFull();
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		setWidth("100.0%");

		// common part: create layout
		subForms = new TabSheet();
		subForms.setWidth("100.0%");
		subForms.setHeight("100.0%");
		subForms.setSizeFull();
		subForms.setImmediate(true);
		mainLayout.addComponent(subForms);

		buildAbaDadosGerais();
		buildAbaComissao();

		return mainLayout;
	}

	public void buildAbaComissao() {
		GridLayout gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		// gridLayout_1.setHeight("100.0%");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setRows(5);
		gridLayout_1.setColumns(5);

		tfSalarioFixo = ComponentUtil.buildCurrencyField("Salário fixo");
		gridLayout_1.addComponent(tfSalarioFixo, 0, 0, 0, 0);

		cbPriorizarPgto = ComponentUtil
				.buildComboBox("Priorizar comissão cadastro");
		gridLayout_1.addComponent(cbPriorizarPgto, 1, 0, 1, 0);

		cbComissaoOver = ComponentUtil.buildComboBox("Pagamento comissão over");
		gridLayout_1.addComponent(cbComissaoOver, 2, 0, 2, 0);

		ogTipoComissaoServico = new OptionGroup();
		ogTipoComissaoServico.setStyleName("horizontal");
		ogTipoComissaoServico.setCaption("Tipo comissão serviço");
		ogTipoComissaoServico.setNullSelectionAllowed(false);
		ogTipoComissaoServico.setImmediate(false);
		ogTipoComissaoServico.addItem("R");
		ogTipoComissaoServico.setItemCaption("R", "Comissão / Serviço R$");
		ogTipoComissaoServico.addItem("P");
		ogTipoComissaoServico.setItemCaption("P", "Comissão / Serviço %");
		gridLayout_1.addComponent(ogTipoComissaoServico, 0, 1, 1, 1);

		tfComissaoServico = ComponentUtil
				.buildCurrencyField("Valor da comissão do serviço");
		gridLayout_1.addComponent(tfComissaoServico, 2, 1, 2, 1);

		ogTipoComissaoProduto = new OptionGroup();
		ogTipoComissaoProduto.setStyleName("horizontal");
		ogTipoComissaoProduto.setCaption("Tipo da comissão do produto");
		ogTipoComissaoProduto.setNullSelectionAllowed(false);
		ogTipoComissaoProduto.setImmediate(false);
		ogTipoComissaoProduto.addItem("R");
		ogTipoComissaoProduto.setItemCaption("R", "Comissão / Produto R$");
		ogTipoComissaoProduto.addItem("P");
		ogTipoComissaoProduto.setItemCaption("P", "Comissão / Produto %");
		gridLayout_1.addComponent(ogTipoComissaoProduto, 0, 2, 1, 2);

		tfComissaoProduto = ComponentUtil
				.buildCurrencyField("Valor da comissão do produto");
		gridLayout_1.addComponent(tfComissaoProduto, 2, 2, 2, 2);

		cbPgtoComissao = ComponentUtil
				.buildComboBox("Vendedor / Atendente pgto comissão será");
		gridLayout_1.addComponent(cbPgtoComissao, 0, 3, 0, 3);

		cbLctoComissao = ComponentUtil.buildComboBox("Lançamento de comissão");
		gridLayout_1.addComponent(cbLctoComissao, 2, 3, 2, 3);

		mocContaCaixa = new ManyToOneComboField<>(ContaCaixa.class);
		mocContaCaixa.setCaption("Conta Caixa");
		gridLayout_1.addComponent(mocContaCaixa, 0, 4, 1, 4);

		mocPlanoConta = new ManyToOneComboField<>(PlanoContaEntity.class);
		mocPlanoConta.setCaption("Plano de conta");
		gridLayout_1.addComponent(mocPlanoConta, 2, 4, 3, 4);

		subForms.addTab(gridLayout_1, "Dados de comissão", null);
	}

	public void buildAbaDadosGerais() {
		GridLayout gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setRows(9);
		gridLayout_1.setColumns(10);

		// mocPessoa
		mocPessoa = new ManyToOneComboField<>(PessoaEntity.class);
		mocPessoa.setCaption("Pessoa");
		mocPessoa.setImmediate(false);
		gridLayout_1.addComponent(mocPessoa, 0,0, 1,0);

		// mocTipoColaborador
		mocTipoColaborador = new ManyToOneComboField<>(TipoColaboradorEntity.class);
		mocTipoColaborador.setCaption("Tipo do colaborador");
		mocTipoColaborador.setImmediate(false);
		gridLayout_1.addComponent(mocTipoColaborador, 2,0, 3,0);

		// mocSituacaoColaborador
		mocSituacaoColaborador = new ManyToOneComboField<>(SituacaoColaboradorEntity.class);
		mocSituacaoColaborador.setCaption("Situação do colaborador");
		mocSituacaoColaborador.setImmediate(false);
		gridLayout_1.addComponent(mocSituacaoColaborador, 4,0, 5,0);

		// mocSindicato
		mocSindicato = new ManyToOneComboField<>(SindicatoEntity.class);
		mocSindicato.setCaption("Sindicato");
		mocSindicato.setImmediate(false);
		gridLayout_1.addComponent(mocSindicato, 6,0);

		// mocNivelFormacao
		mocNivelFormacao = new ManyToOneComboField<>(NivelFormacaoEntity.class);
		mocNivelFormacao.setCaption("Nível de formação");
		mocNivelFormacao.setImmediate(false);
		gridLayout_1.addComponent(mocNivelFormacao, 0,1, 1,1);

		// mocCargo
		mocCargo = new ManyToOneComboField<>(CargoEntity.class);
		mocCargo.setCaption("Cargo");
		mocCargo.setImmediate(false);
		gridLayout_1.addComponent(mocCargo, 2,1, 3,1);

		// mocSetor
		mocSetor = new ManyToOneComboField<>(SetorEntity.class);
		mocSetor.setCaption("Setor");
		mocSetor.setImmediate(false);
		gridLayout_1.addComponent(mocSetor, 4,1);

		// tfMatricula
		tfMatricula = ComponentUtil.buildTextField("Matrícula");
		tfMatricula.setNullRepresentation("");
		tfMatricula.setImmediate(false);
		gridLayout_1.addComponent(tfMatricula, 0,2);

		// pdfDataCadastro
		pdfDataCadastro = ComponentUtil.buildPopupDateField("Data de cadastro");
		pdfDataCadastro.setImmediate(false);
		gridLayout_1.addComponent(pdfDataCadastro, 1,2);

		// pdfDataAdmissao
		pdfDataAdmissao = ComponentUtil.buildPopupDateField("Data da admissão");
		pdfDataAdmissao.setImmediate(false);
		gridLayout_1.addComponent(pdfDataAdmissao, 2,2);

		// pdfDataVencimentoFerias
		pdfDataVencimentoFerias = ComponentUtil.buildPopupDateField("Vencimento das férias");
		pdfDataVencimentoFerias.setImmediate(false);
		gridLayout_1.addComponent(pdfDataVencimentoFerias, 3,2, 4,2);

		// pdfDataTransferencia
		pdfDataTransferencia = ComponentUtil.buildPopupDateField("Data de Transferência");
		pdfDataTransferencia.setImmediate(false);
		gridLayout_1.addComponent(pdfDataTransferencia, 5,2, 6,2);

		// pdfDataDemissao
		pdfDataDemissao = ComponentUtil.buildPopupDateField("Demissão");
		pdfDataDemissao.setImmediate(false);
		gridLayout_1.addComponent(pdfDataDemissao, 7,2);

		// cbDescontoPlanoSaude
		cbDescontoPlanoSaude = ComponentUtil.buildComboBox("Desconto do plano de saúde");
		cbDescontoPlanoSaude.setImmediate(false);
		gridLayout_1.addComponent(cbDescontoPlanoSaude, 0,3, 1,3);

		// cbSaiRais
		cbSaiRais = ComponentUtil.buildComboBox("Sai na RAIS");
		cbSaiRais.setImmediate(false);
		gridLayout_1.addComponent(cbSaiRais, 2,3);

		// tfCodigoTurma
		tfCodigoTurma = ComponentUtil.buildTextField("Código da turma");
		tfCodigoTurma.setNullRepresentation("");
		tfCodigoTurma.setImmediate(false);
		gridLayout_1.addComponent(tfCodigoTurma, 3,3);

		// pdfDataUltimoExame
		pdfDataUltimoExame = ComponentUtil.buildPopupDateField("Último exame em:");
		pdfDataUltimoExame.setImmediate(false);
		gridLayout_1.addComponent(pdfDataUltimoExame, 4,3);

		// pdfDataVencimento
		pdfDataVencimento = ComponentUtil.buildPopupDateField("Vencimento");
		pdfDataVencimento.setImmediate(false);
		gridLayout_1.addComponent(pdfDataVencimento, 5,3);

		// tfCategoria
		tfCategoria = ComponentUtil.buildTextField("Categoria");
		tfCategoria.setNullRepresentation("");
		tfCategoria.setImmediate(false);
		gridLayout_1.addComponent(tfCategoria, 0,4);

		// tfOcorrencia
		tfOcorrencia = ComponentUtil.buildTextField("Ocorrência");
		tfOcorrencia.setNullRepresentation("");
		tfOcorrencia.setImmediate(false);
		gridLayout_1.addComponent(tfOcorrencia, 1,4);

		// tfCodigoDemissao
		tfCodigoDemissao = ComponentUtil.buildTextField("Código de demissão");
		tfCodigoDemissao.setNullRepresentation("");
		tfCodigoDemissao.setImmediate(false);
		gridLayout_1.addComponent(tfCodigoDemissao, 2,4);

		// cbOptante
		cbOptante = ComponentUtil.buildComboBox("Optante");
		cbOptante.setImmediate(false);
		gridLayout_1.addComponent(cbOptante, 3,4);

		// pdfDataOpcao
		pdfDataOpcao = ComponentUtil.buildPopupDateField("Data opção");
		pdfDataOpcao.setImmediate(false);
		gridLayout_1.addComponent(pdfDataOpcao, 4,4);
		
		// mocUf
		mocUf = ComponentUtil.buildComboBox("UF");
		mocUf.setImmediate(false);
		gridLayout_1.addComponent(mocUf, 5,4);

		// tfCodigoAdmissao
		tfCodigoAdmissao = ComponentUtil.buildTextField("Código de admissão");
		tfCodigoAdmissao.setNullRepresentation("");
		tfCodigoAdmissao.setImmediate(false);
		gridLayout_1.addComponent(tfCodigoAdmissao, 0,5);

		// tfCodigoDemissaoCaged
		tfCodigoDemissaoCaged = ComponentUtil.buildTextField("Código de demissão CAGED");
		tfCodigoDemissaoCaged.setNullRepresentation("");
		tfCodigoDemissaoCaged.setImmediate(false);
		gridLayout_1.addComponent(tfCodigoDemissaoCaged, 1,5, 2,5);

		// cbFormaPagamento
		cbFormaPagamento = ComponentUtil.buildComboBox("Forma de pagamento");
		cbFormaPagamento.setImmediate(false);
		gridLayout_1.addComponent(cbFormaPagamento, 3,5, 4,5);

		// tfBanco
		tfBanco = ComponentUtil.buildTextField("Banco");
		tfBanco.setNullRepresentation("");
		tfBanco.setImmediate(false);
		gridLayout_1.addComponent(tfBanco, 5,5);

		// tfAgencia
		tfAgencia = ComponentUtil.buildTextField("Agência");
		tfAgencia.setNullRepresentation("");
		tfAgencia.setImmediate(false);
		gridLayout_1.addComponent(tfAgencia, 6,5);

		// tfDigitoAgencia
		tfDigitoAgencia = ComponentUtil.buildTextField("Dígito");
		tfDigitoAgencia.setNullRepresentation("");
		tfDigitoAgencia.setImmediate(false);
		gridLayout_1.addComponent(tfDigitoAgencia, 7,5);

		// tfConta
		tfConta = ComponentUtil.buildTextField("Conta");
		tfConta.setNullRepresentation("");
		tfConta.setImmediate(false);
		gridLayout_1.addComponent(tfConta, 8,5);

		// tfDigitoConta
		tfDigitoConta = ComponentUtil.buildTextField("Dígito");
		tfDigitoConta.setNullRepresentation("");
		tfDigitoConta.setImmediate(false);
		gridLayout_1.addComponent(tfDigitoConta, 9,5);

		// pdfDataCadastroPis
		pdfDataCadastroPis = ComponentUtil.buildPopupDateField("Data de cadastro do PIS");
		pdfDataCadastroPis.setImmediate(false);
		gridLayout_1.addComponent(pdfDataCadastroPis, 0,6, 1,6);

		// tfNumeroPis
		tfNumeroPis = ComponentUtil.buildTextField("Número do PIS");
		tfNumeroPis.setNullRepresentation("");
		tfNumeroPis.setImmediate(false);
		gridLayout_1.addComponent(tfNumeroPis, 2,6);

		// tfBanco1
		tfBanco1 = ComponentUtil.buildTextField("Banco");
		tfBanco1.setNullRepresentation("");
		tfBanco1.setImmediate(false);
		gridLayout_1.addComponent(tfBanco1, 3,6);

		// tfAgencia1
		tfAgencia1 = ComponentUtil.buildTextField("Agência");
		tfAgencia1.setNullRepresentation("");
		tfAgencia1.setImmediate(false);
		gridLayout_1.addComponent(tfAgencia1, 4,6);

		// tfDigitoAgencia1
		tfDigitoAgencia1 = ComponentUtil.buildTextField("Dígito");
		tfDigitoAgencia1.setNullRepresentation("");
		tfDigitoAgencia1.setImmediate(false);
		gridLayout_1.addComponent(tfDigitoAgencia1, 5,6);

		// tfNumeroCarteira
		tfNumeroCarteira = ComponentUtil.buildTextField("Número da carteira profissional");
		tfNumeroCarteira.setNullRepresentation("");
		tfNumeroCarteira.setImmediate(false);
		gridLayout_1.addComponent(tfNumeroCarteira, 6,6, 7,6);

		// tfSerie
		tfSerie = ComponentUtil.buildTextField("Série");
		tfSerie.setNullRepresentation("");
		tfSerie.setImmediate(false);
		gridLayout_1.addComponent(tfSerie, 8,6);

		// pdfDataExpedida
		pdfDataExpedida = ComponentUtil.buildPopupDateField("Expedida em");
		pdfDataExpedida.setImmediate(false);
		gridLayout_1.addComponent(pdfDataExpedida, 9,6);

		// tfObservacao
		tfObservacao = ComponentUtil.buildTextArea("Observação");
		tfObservacao.setNullRepresentation("");
		tfObservacao.setImmediate(false);
		gridLayout_1.addComponent(tfObservacao, 0,7, 9,7);

		subForms.addTab(gridLayout_1, "Dados do colaborador", null);
	}

}