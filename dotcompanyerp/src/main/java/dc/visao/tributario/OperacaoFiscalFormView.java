package dc.visao.tributario;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.tributario.OperacaoFiscalFormController;
import dc.entidade.geral.tabela.CfopEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneComboField;
import dc.visao.framework.util.ComponentUtil;

public class OperacaoFiscalFormView extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private GridLayout fields;

	OperacaoFiscalFormController controller;

	@AutoGenerated
	private ManyToOneComboField<CfopEntity> cfop;

	TextField descricao, txtCfop;

	TextField descricaoNaNf;

	TextArea observacao;

	public OperacaoFiscalFormView(OperacaoFiscalFormController controller) {
		this.controller = controller;
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("70.0%");

		// fields
		fields = buildFields();
		mainLayout.addComponent(fields);

		// subForm

		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildFields() {
		// common part: create layout
		fields = new GridLayout(6, 6);
		fields.setImmediate(false);
		fields.setWidth("100.0%");
		fields.setHeight("-1px");
		fields.setMargin(false);
		fields.setSpacing(true);

		setHeight("100%");
		
		// calDataRequisicao

		//cfop = ComponentUtil.buildComboBox("CFOP");
		//cfop.setRequired(true);
		//cfop.setContainerDataSource(controller.carregarCfop());
		//cfop = new  ManyToOneComboField<>(CfopEntity.class);
		//cfop.setCaption("Cfop");
		//fields.addComponent(cfop, 0, 0, 1, 0);
		
		txtCfop = ComponentUtil.buildTextField("Cfop");
		fields.addComponent(txtCfop, 0,0,1,0);

		descricao = ComponentUtil.buildTextField("Descrição");
		descricao.setMaxLength(100);
		fields.addComponent(descricao, 0, 1, 2, 1);

		descricaoNaNf = ComponentUtil.buildTextField("Descrição Na NF");
		descricaoNaNf.setMaxLength(100);
		fields.addComponent(descricaoNaNf, 0, 2, 2, 2);

		observacao = ComponentUtil.buildTextArea("Observações");
		observacao.setMaxLength(500);
		fields.addComponent(observacao, 0, 3, 2, 3);
		return fields;
	}

	public VerticalLayout getMainLayout() {
		return mainLayout;
	}

	public ManyToOneComboField<CfopEntity> getCfop() {
		return cfop;
	}

	public void setCfop(ManyToOneComboField<CfopEntity> cfop) {
		this.cfop = cfop;
	}

	public TextField getDescricao() {
		return descricao;
	}

	public void setDescricao(TextField descricao) {
		this.descricao = descricao;
	}

	public TextField getDescricaoNaNf() {
		return descricaoNaNf;
	}

	public void setDescricaoNaNf(TextField descricaoNaNf) {
		this.descricaoNaNf = descricaoNaNf;
	}

	public TextArea getObservacao() {
		return observacao;
	}

	public void setObservacao(TextArea observacao) {
		this.observacao = observacao;
	}

	public TextField getTxtCfop() {
		return txtCfop;
	}

	public void setTxtCfop(TextField txtCfop) {
		this.txtCfop = txtCfop;
	}
	
}