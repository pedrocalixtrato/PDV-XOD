package dc.visao.adm.dotcompany;

import org.vaadin.addons.maskedtextfield.MaskedTextField;
import org.vaadin.tepi.imageviewer.ImageViewer;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.adm.dotcompany.ParametroClienteFormController;
import dc.entidade.administrativo.empresa.EmpresaEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneCombo;
import dc.visao.framework.util.ComponentUtil;

public class ParametroClienteFormView extends CustomComponent {

	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private GridLayout fields;
	@AutoGenerated
	private TabSheet subForms, subForms_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1, horizontalLayout_2;
	@AutoGenerated
	private AbsoluteLayout absoluteLayout_2, absoluteLayout_4, absoluteLayout_3;
	
	private TextField txtLiberadoPorQuem, txtCaminhoBanco, txtVendedor, txtComissaoVendedor, txtAgente, txtComissaoAgente,
	        txtValorEntrada,txtValorMensPromocional, txtValorMensalidade,
	        txtEmailPrincipal, txtEmailSecundario, txtNomeResponsavel ;

	private ComboBox cmbTipoSistema, cmbUsaNfe, cmbEmpresaLiberada,cmbEmpresaBloqueada, cmbMostrandoAvisoCorte, cmbTipoFatura, cmbEmpresaBloqueada1 ;
	
	private PopupDateField dtDataEntrada, dtVencimentoPromocao, dtDiaVencimento;

	private TextField txtTelefone;
	
	private TextArea txtObsFechamento;
	
	private ImageViewer imgProduto;
	
	private ManyToOneCombo<EmpresaEntity> cmbEmpresa;
	
	@AutoGenerated
	private ParametroClienteFormController controller;
	

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ParametroClienteFormView(ParametroClienteFormController controller) {
		this.controller = controller;

		buildMainLayout();
		setCompositionRoot(mainLayout);
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		setSizeFull();
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		setWidth("100.0%");
		
		fields = buildFields();
		mainLayout.addComponent(fields);
	
		// common part: create layout
		subForms = new TabSheet();
		subForms.setWidth("100.0%");
		subForms.setHeight("100.0%");
		subForms.setSizeFull();
		subForms.setImmediate(true);
		mainLayout.addComponent(subForms);

		buildAbaInformacaoGeral();
		buildFinanceiroSubForm();
		buildDadosCobrancaSubForm();
		buildObsSubForm();
		
		return mainLayout;
	}
	
	@AutoGenerated
	private GridLayout buildFields() {
		GridLayout gridLayout_1 = new GridLayout(1, 1);
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setRows(1);
		gridLayout_1.setColumns(1);
		
		cmbEmpresa = new ManyToOneCombo<EmpresaEntity>();
		cmbEmpresa.setCaption("Empresa");
		cmbEmpresa.setWidth("856px");
		cmbEmpresa.setHeight("-1px");
		gridLayout_1.addComponent(cmbEmpresa);
		
		// //
		return gridLayout_1;

	}

	
/////////////////////////////////////////////////////////////////////// INFORMAÇÃO //////////////////////////////////////////////////////////
	
	public void buildAbaInformacaoGeral() {

		GridLayout gridLayout_1 = new GridLayout(7, 7);
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setRows(7);
		gridLayout_1.setColumns(7);
		
		cmbTipoSistema= new ComboBox();
		cmbTipoSistema.setCaption("Tipo de Sistema ");
		cmbTipoSistema.setWidth("456px");
		cmbTipoSistema.setHeight("-1px");
		carregarTipoSistema();
		gridLayout_1.addComponent(cmbTipoSistema, 0, 0);
		// //
		// cmbUsaNfe
				cmbUsaNfe = new ComboBox(); 
				cmbUsaNfe.setCaption("USA NFE");
				cmbUsaNfe.setImmediate(false);
				cmbUsaNfe.setWidth("100px");
				cmbUsaNfe.setHeight("-1px");
				carregarNfe();
				cmbUsaNfe.setValue(SIM_NAO.NAO);

				cmbUsaNfe.addValueChangeListener(new Property.ValueChangeListener() {
					@Override
					public void valueChange(ValueChangeEvent event) {
						SIM_NAO obj = (SIM_NAO) event.getProperty().getValue();

						if (obj.equals(SIM_NAO.SIM)) {
							gridLayout_1.addComponent(cmbUsaNfe, 1, 0);
						}

						if (obj.equals(SIM_NAO.NAO)) {
							gridLayout_1.addComponent(cmbUsaNfe, 1, 0);
						}
					}
				});
		// //
				
		gridLayout_1.addComponent(cmbUsaNfe, 1,0);
		//fields.addComponent(cmbUnidadeProduto, 1, 0);
				
		// //
		txtLiberadoPorQuem = ComponentUtil.buildTextField("Liberado por Quem?");
		//txtLiberadoPorQuem.setImmediate(false);
		//txtLiberadoPorQuem.setWidth("456px");
		//txtLiberadoPorQuem.setHeight("-1px");
		gridLayout_1.addComponent(txtLiberadoPorQuem, 0, 1);
		// //
		
		// // //
		txtCaminhoBanco = ComponentUtil.buildTextField("Caminho do Banco");
		//txtCaminhoBanco.setImmediate(false);
		//txtCaminhoBanco.setWidth("456px");
		//txtCaminhoBanco.setHeight("-1px");		
		gridLayout_1.addComponent(txtCaminhoBanco, 1, 1);
		
		txtVendedor = ComponentUtil.buildTextField("Vendedor");
		//txtVendedor.setImmediate(false);
		//txtVendedor.setWidth("256px");
		//txtVendedor.setHeight("-1px");
		gridLayout_1.addComponent(txtVendedor, 0,2);
		
		txtComissaoVendedor = ComponentUtil.buildTextField("Comissão");
		//txtComissaoVendedor.setImmediate(false);
		//txtComissaoVendedor.setWidth("56px");
		//txtComissaoVendedor.setHeight("-1px");		
		gridLayout_1.addComponent(txtComissaoVendedor, 1,2);
		
		txtAgente = ComponentUtil.buildTextField("Agente");
		//txtAgente.setWidth("256px");
		//txtAgente.setHeight("-1px");
		gridLayout_1.addComponent(txtAgente, 0,3);
		
		txtComissaoAgente = ComponentUtil.buildTextField("Comissão");
		//txtComissaoAgente.setImmediate(false);
		//txtComissaoAgente.setWidth("56px");
		//txtComissaoAgente.setHeight("-1px");		
		gridLayout_1.addComponent(txtComissaoAgente, 1,3);
		
		subForms.addTab(gridLayout_1, "Informação geral", null);

		
	}
	
/////////////////////////////////////////////////////////////////////////// FINANCEIRO ///////////////////////////////////////////////////////////////////////////////
	
	public void buildFinanceiroSubForm() {
		GridLayout layout = new GridLayout(8, 7);
		layout.setImmediate(false);
		layout.setWidth("100.0%");
		// fields.setHeight("100.0%");
		layout.setMargin(true);
		layout.setSpacing(true);
		
		txtValorEntrada = ComponentUtil.buildCurrencyField("Valor Entrada");
		layout.addComponent(txtValorEntrada, 0, 0);

		// dtDataEntrada
		dtDataEntrada = ComponentUtil.buildPopupDateField("Data Entrada");
		//dtDataEntrada.setImmediate(false);
		//dtDataEntrada.setWidth("-1px");
		//dtDataEntrada.setHeight("-1px");
		layout.addComponent(dtDataEntrada, 1, 0);

		cmbEmpresaLiberada = new ComboBox();
		cmbEmpresaLiberada.setCaption("Empresa Liberada");
		cmbEmpresaLiberada.setImmediate(false);
		cmbEmpresaLiberada.setWidth("220px");
		cmbEmpresaLiberada.setHeight("-1px");
		carregarEmpresaLiberada();
		layout.addComponent(cmbEmpresaLiberada, 2, 0);

		// cmbEmpresaBloqueada
		cmbEmpresaBloqueada= new ComboBox();
		cmbEmpresaBloqueada.setCaption("Empresa Bloqueada");
		cmbEmpresaBloqueada.setImmediate(false);
		cmbEmpresaBloqueada.setWidth("-1px");
		cmbEmpresaBloqueada.setHeight("-1px");
		carregarEmpresaBloqueada();
		layout.addComponent(cmbEmpresaBloqueada, 3, 0);

		// cmbMostrandoAvisoCorte
		cmbMostrandoAvisoCorte = new ComboBox();
		cmbMostrandoAvisoCorte.setCaption("Mostrando Aviso de Corte");
		cmbMostrandoAvisoCorte.setImmediate(false);
		cmbMostrandoAvisoCorte.setWidth("220px");
		cmbMostrandoAvisoCorte.setHeight("-1px");
		carregarAvisoCorte();	
		layout.addComponent(cmbMostrandoAvisoCorte, 4, 0);

		txtValorMensPromocional = ComponentUtil.buildCurrencyField("Valor Mens. Promocional");
		layout.addComponent(txtValorMensPromocional, 0, 1);

		// dtDataVencimentoPromocao
		dtVencimentoPromocao = ComponentUtil.buildPopupDateField("Vencimento Promoção");
		//dtVencimentoPromocao.setImmediate(false);
		//dtVencimentoPromocao.setWidth("-1px");
		//dtVencimentoPromocao.setHeight("-1px");;		
		layout.addComponent(dtVencimentoPromocao, 1, 1);
		
		txtValorMensalidade = ComponentUtil.buildCurrencyField("Valor Mensalidade");
		layout.addComponent(txtValorMensalidade, 0, 2);
		
		// dtDiaVencimento
		dtDiaVencimento = ComponentUtil.buildPopupDateField("Dia Vencimento");
		layout.addComponent(dtDiaVencimento, 1,2);
		
		cmbTipoFatura = new ComboBox();
		cmbTipoFatura.setCaption("Tipo Fatura");
		cmbTipoFatura.setImmediate(false);
		cmbTipoFatura.setWidth("220px");
		cmbTipoFatura.setHeight("-1px");
		carregarTipoFatura();
		layout.addComponent(cmbTipoFatura, 0, 3);

		// cmbEmpresaBloqueada1
		cmbEmpresaBloqueada1= new ComboBox();
		cmbEmpresaBloqueada1.setCaption("Empresa Bloqueada");
		cmbEmpresaBloqueada1.setImmediate(false);
		cmbEmpresaBloqueada1.setWidth("-1px");
		cmbEmpresaBloqueada1.setHeight("-1px");
		carregarEmpresaBloqueada1();		
		layout.addComponent(cmbEmpresaBloqueada1, 1,3);
		
		subForms.addTab(layout, "Geral", null);
		
	}
	
//////////////////////////////////////////////////////////////////DADOS COBRANÇA /////////////////////////////////////////////////////////////////////////////////
	
    public void buildDadosCobrancaSubForm() {
    	
    	GridLayout gridLayout_1 = new GridLayout(8, 8);
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		
		txtEmailPrincipal = ComponentUtil.buildTextField("Email Principal");
		gridLayout_1.addComponent(txtEmailPrincipal, 0, 0);

		txtEmailSecundario = ComponentUtil.buildTextField("Email Secundário");
		gridLayout_1.addComponent(txtEmailSecundario, 0, 1);

		txtNomeResponsavel= ComponentUtil.buildTextField("Nome Responsável");
		gridLayout_1.addComponent(txtNomeResponsavel, 0,2);
		
		txtTelefone = ComponentUtil.buildPhoneField("Telefone");
		//txtTelefone.setMaskClientOnly(true);
		gridLayout_1.addComponent(txtTelefone, 0, 3);		

		subForms.addTab(gridLayout_1, "Dados Cobrança", null);

    }
    
    public void buildObsSubForm() {
    	
    	GridLayout gridLayout_1 = new GridLayout(8, 8);
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		
		txtObsFechamento = ComponentUtil.buildTextArea("OBS, Fechamento");
		gridLayout_1.addComponent(txtObsFechamento, 0, 0);
		
		subForms.addTab(gridLayout_1, "Obs", null);

    	
    }


    @AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);

		// cmbUsaNfe
		cmbUsaNfe = new ComboBox();
		cmbUsaNfe.setCaption("Usa NFE");
		cmbUsaNfe.setImmediate(false);
		cmbUsaNfe.setWidth("494px");
		cmbUsaNfe.setHeight("-1px");
		horizontalLayout_1.addComponent(cmbUsaNfe);

		// cmbTipoSistema
		cmbTipoSistema= new ComboBox();
		cmbTipoSistema.setCaption("Tipo de Sistema");
		cmbTipoSistema.setImmediate(false);
		cmbTipoSistema.setWidth("456px");
		cmbTipoSistema.setHeight("-1px");
		horizontalLayout_1.addComponent(cmbTipoSistema);

		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		horizontalLayout_2.setSpacing(true);

		// txtLiberadoPorQuem
		txtLiberadoPorQuem = ComponentUtil.buildTextField("Liberado por Quem?");
		//txtLiberadoPorQuem.setImmediate(false);
		//txtLiberadoPorQuem.setWidth("320px");
		//txtLiberadoPorQuem.setHeight("-1px");
		horizontalLayout_2.addComponent(txtLiberadoPorQuem);

		// txtCaminhoBanco
		txtCaminhoBanco = ComponentUtil.buildTextField("Caminho do Banco");
		//txtCaminhoBanco.setImmediate(false);
		//txtCaminhoBanco.setWidth("254px");
		//txtCaminhoBanco.setHeight("-1px");
		horizontalLayout_2.addComponent(txtCaminhoBanco);


		return horizontalLayout_2;
	}

	@AutoGenerated
	private AbsoluteLayout buildAbsoluteLayout_2() {
		// common part: create layout
		absoluteLayout_2 = new AbsoluteLayout();
		absoluteLayout_2.setImmediate(false);
		absoluteLayout_2.setWidth("100.0%");
		absoluteLayout_2.setHeight("100.0%");

		// tabSheet_1
		subForms_1 = buildTabSheet_1();
		absoluteLayout_2.addComponent(subForms_1, "top:-3.0px;left:20.0px;");

		return absoluteLayout_2;
	}

	@AutoGenerated
	private TabSheet buildTabSheet_1() {
		// common part: create layout
		subForms_1 = new TabSheet();
		subForms_1.setImmediate(true);
		subForms_1.setWidth("100.0%");
		subForms_1.setHeight("100.0%");

		// absoluteLayout_3

		// absoluteLayout_4
		absoluteLayout_4 = buildAbsoluteLayout_4();
		subForms_1.addTab(absoluteLayout_4, "Tab", null);

		return subForms_1;
	}
	
	@AutoGenerated
	private AbsoluteLayout buildAbsoluteLayout_4() {
		// common part: create layout
		absoluteLayout_4 = new AbsoluteLayout();
		absoluteLayout_4.setImmediate(false);
		absoluteLayout_4.setWidth("100.0%");
		absoluteLayout_4.setHeight("100.0%");

		// txtEmailPrincipal
		txtEmailPrincipal = ComponentUtil.buildTextField("Email Principal");
		//txtEmailPrincipal.setImmediate(false);
		//txtEmailPrincipal.setWidth("456px");
		//txtEmailPrincipal.setHeight("-1px");
		absoluteLayout_4.addComponent(txtEmailPrincipal);

		// txtEmailSecundario
		txtEmailSecundario = ComponentUtil.buildTextField("Email Secundário");
		//txtEmailSecundario.setImmediate(false);
		//txtEmailSecundario.setWidth("456px");
		//txtEmailSecundario.setHeight("-1px");
		absoluteLayout_4.addComponent(txtEmailSecundario);

		// txtNomeResponsavel
		txtNomeResponsavel =ComponentUtil.buildTextField("Nome Responsável");
		//txtNomeResponsavel.setImmediate(false);
		//txtNomeResponsavel.setWidth("456px");
		//txtNomeResponsavel.setHeight("-1px");
		absoluteLayout_4.addComponent(txtNomeResponsavel);

		// txtTelefone
		txtTelefone = ComponentUtil.buildMaskedTextField("Telefone ",	"(##) #####-####");
		//txtTelefone.setMaskClientOnly(true);
		//txtTelefone.setImmediate(false);
		//txtTelefone.setWidth("-1px");
		//txtTelefone.setHeight("-1px");
		absoluteLayout_4.addComponent(txtTelefone);

		return absoluteLayout_4;
	}


	
	public void carregarTipoFatura() {
		cmbTipoFatura.removeAllItems();
		cmbTipoFatura.addItem(TIPO_FATURA.EMAIL);
		cmbTipoFatura.addItem(TIPO_FATURA.CARTEIRA);
		cmbTipoFatura.addItem(TIPO_FATURA.CARTAO);
		cmbTipoFatura.addItem(TIPO_FATURA.REGISTRADA);
		cmbTipoFatura.addItem(TIPO_FATURA.CARTA);
		cmbTipoFatura.addItem(TIPO_FATURA.BOLETO);
		cmbTipoFatura.addItem(TIPO_FATURA.OUTROS);
		
	}

	
	public void carregarEmpresaLiberada() {
		cmbEmpresaLiberada.removeAllItems();
		cmbEmpresaLiberada.addItem(SIM_NAO.NAO);
		cmbEmpresaLiberada.addItem(SIM_NAO.SIM);
	}
	
	public void carregarEmpresaBloqueada() {
		cmbEmpresaBloqueada.removeAllItems();
		cmbEmpresaBloqueada.addItem(SIM_NAO.NAO);
		cmbEmpresaBloqueada.addItem(SIM_NAO.SIM);
	}
	
	public void carregarAvisoCorte() {
		cmbMostrandoAvisoCorte.removeAllItems();
		cmbMostrandoAvisoCorte.addItem(SIM_NAO.NAO);
		cmbMostrandoAvisoCorte.addItem(SIM_NAO.SIM);
	}
	
	public void carregarEmpresaBloqueada1() {
		cmbEmpresaBloqueada1.removeAllItems();
		cmbEmpresaBloqueada1.addItem(SIM_NAO.NAO);
		cmbEmpresaBloqueada1.addItem(SIM_NAO.SIM);
	}

	
	public void carregarTipoSistema() {
		cmbTipoSistema.removeAllItems();
		cmbTipoSistema.addItem(TIPO_SISTEMA.AUTOMACAO);
		cmbTipoSistema.addItem(TIPO_SISTEMA.AUTOMACAO_EVENTOS);
		cmbTipoSistema.addItem(TIPO_SISTEMA.CENTRO_AUTOMOTIVO);
		cmbTipoSistema.addItem(TIPO_SISTEMA.AUTOMACAO_CELULAR);
		cmbTipoSistema.addItem(TIPO_SISTEMA.AUTOMACAO_OS_GERAL);
		cmbTipoSistema.addItem(TIPO_SISTEMA.AUTOMACAO_CONFECCAO);
		cmbTipoSistema.addItem(TIPO_SISTEMA.LIVRARIA);
		cmbTipoSistema.addItem(TIPO_SISTEMA.TELEMENSAGENS);
		cmbTipoSistema.addItem(TIPO_SISTEMA.WEBSITE);
		cmbTipoSistema.addItem(TIPO_SISTEMA.OUTROS);
		
	}
	
	public enum TIPO_FATURA {

		EMAIL("Email", "1"), CARTEIRA("Carteira", "2"), CARTAO("Cartão", "3"), REGISTRADA("Registrada", "4"), CARTA("Carta","5"), BOLETO("Boleto", "6"), OUTROS("Outros", "7");

		private TIPO_FATURA(String label, String codigo) {
			this.label = label;
			this.codigo = codigo;
		}

		private String label;
		private String codigo;

		public static TIPO_FATURA getTipoFatura(String codigo) {
			if (codigo.equals("1")) {
				return EMAIL;
			}
			if (codigo.equals("2")) {
				return CARTEIRA;
			}
			if (codigo.equals("3")) {
				return CARTAO;
			}
			if (codigo.equals("4")) {
				return REGISTRADA;
			}
			if (codigo.equals("5")) {
				return CARTA;
			}
			if (codigo.equals("6")) {
				return BOLETO;
			}
			if (codigo.equals("7")) {
				return OUTROS;
			}

			return null;
		}

		public String getCodigo() {
			return codigo;
		}

		public String getLabel() {
			return label;
		}

		@Override
		public String toString() {
			return label;
		}
	}

	
	public enum TIPO_SISTEMA {

		AUTOMACAO("Automação", "1"), AUTOMACAO_EVENTOS("Automação Eventos", "2"), CENTRO_AUTOMOTIVO("Centro Automotivo", "3"), AUTOMACAO_CELULAR("Automação Celular", "4"), AUTOMACAO_OS_GERAL("Automação OS. Geral","5"), AUTOMACAO_CONFECCAO("Automação Confecção", "6"), LIVRARIA("Livraria", "7"), TELEMENSAGENS("Tele Mensagens","8"), WEBSITE("Web Site","9"), OUTROS("Outros","10");

		private TIPO_SISTEMA(String label, String codigo) {
			this.label = label;
			this.codigo = codigo;
		}

		private String label;
		private String codigo;

		public static TIPO_SISTEMA getTipoSistema(String codigo) {
			if (codigo.equals("1")) {
				return AUTOMACAO;
			}
			if (codigo.equals("2")) {
				return AUTOMACAO_EVENTOS;
			}
			if (codigo.equals("3")) {
				return CENTRO_AUTOMOTIVO;
			}
			if (codigo.equals("4")) {
				return AUTOMACAO_CELULAR;
			}
			if (codigo.equals("5")) {
				return AUTOMACAO_OS_GERAL;
			}
			if (codigo.equals("6")) {
				return AUTOMACAO_CONFECCAO;
			}
			if (codigo.equals("7")) {
				return LIVRARIA;
			}
			if (codigo.equals("8")) {
				return TELEMENSAGENS;
			}
			if (codigo.equals("9")) {
				return WEBSITE;
			}
			if (codigo.equals("10")) {
				return OUTROS;
			}

			return null;
		}

		public String getCodigo() {
			return codigo;
		}

		public String getLabel() {
			return label;
		}

		@Override
		public String toString() {
			return label;
		}
	}
	
	public void carregarNfe() {
		cmbUsaNfe.removeAllItems();
		cmbUsaNfe.addItem(SIM_NAO.NAO);
		cmbUsaNfe.addItem(SIM_NAO.SIM);
	}
	
	public enum SIM_NAO {

		NAO("Não", "0"), SIM("Sim", "1");

		private SIM_NAO(String label, String codigo) {
			this.label = label;
			this.codigo = codigo;
		}

		private String label;
		private String codigo;

		public static SIM_NAO getValor(String codigo) {
			if (codigo.equals("0")) {
				return NAO;
			}
			if (codigo.equals("1")) {
				return SIM;
			}
			return null;
		}

		public String getCodigo() {
			return codigo;
		}

		public String getLabel() {
			return label;
		}

		@Override
		public String toString() {
			return label;
		}
	}

	public TextField getTxtLiberadoPorQuem() {
		return txtLiberadoPorQuem;
	}

	public void setTxtLiberadoPorQuem(TextField txtLiberadoPorQuem) {
		this.txtLiberadoPorQuem = txtLiberadoPorQuem;
	}

	public TextField getTxtCaminhoBanco() {
		return txtCaminhoBanco;
	}

	public void setTxtCaminhoBanco(TextField txtCaminhoBanco) {
		this.txtCaminhoBanco = txtCaminhoBanco;
	}

	public TextField getTxtVendedor() {
		return txtVendedor;
	}

	public void setTxtVendedor(TextField txtVendedor) {
		this.txtVendedor = txtVendedor;
	}

	public TextField getTxtComissaoVendedor() {
		return txtComissaoVendedor;
	}

	public void setTxtComissaoVendedor(TextField txtComissaoVendedor) {
		this.txtComissaoVendedor = txtComissaoVendedor;
	}

	public TextField getTxtAgente() {
		return txtAgente;
	}

	public void setTxtAgente(TextField txtAgente) {
		this.txtAgente = txtAgente;
	}

	public TextField getTxtComissaoAgente() {
		return txtComissaoAgente;
	}

	public void setTxtComissaoAgente(TextField txtComissaoAgente) {
		this.txtComissaoAgente = txtComissaoAgente;
	}

	public TextField getTxtValorEntrada() {
		return txtValorEntrada;
	}

	public void setTxtValorEntrada(TextField txtValorEntrada) {
		this.txtValorEntrada = txtValorEntrada;
	}

	public TextField getTxtValorMensPromocional() {
		return txtValorMensPromocional;
	}

	public void setTxtValorMensPromocional(TextField txtValorMensPromocional) {
		this.txtValorMensPromocional = txtValorMensPromocional;
	}

	public TextField getTxtValorMensalidade() {
		return txtValorMensalidade;
	}

	public void setTxtValorMensalidade(TextField txtValorMensalidade) {
		this.txtValorMensalidade = txtValorMensalidade;
	}

	public TextField getTxtEmailPrincipal() {
		return txtEmailPrincipal;
	}

	public void setTxtEmailPrincipal(TextField txtEmailPrincipal) {
		this.txtEmailPrincipal = txtEmailPrincipal;
	}

	public TextField getTxtEmailSecundario() {
		return txtEmailSecundario;
	}

	public void setTxtEmailSecundario(TextField txtEmailSecundario) {
		this.txtEmailSecundario = txtEmailSecundario;
	}

	public TextField getTxtNomeResponsavel() {
		return txtNomeResponsavel;
	}

	public void setTxtNomeResponsavel(TextField txtNomeResponsavel) {
		this.txtNomeResponsavel = txtNomeResponsavel;
	}

	public ComboBox getCmbTipoSistema() {
		return cmbTipoSistema;
	}

	public void setCmbTipoSistema(ComboBox cmbTipoSistema) {
		this.cmbTipoSistema = cmbTipoSistema;
	}

	public ComboBox getCmbUsaNfe() {
		return cmbUsaNfe;
	}

	public void setCmbUsaNfe(ComboBox cmbUsaNfe) {
		this.cmbUsaNfe = cmbUsaNfe;
	}

	public ComboBox getCmbEmpresaLiberada() {
		return cmbEmpresaLiberada;
	}

	public void setCmbEmpresaLiberada(ComboBox cmbEmpresaLiberada) {
		this.cmbEmpresaLiberada = cmbEmpresaLiberada;
	}

	public ComboBox getCmbEmpresaBloqueada() {
		return cmbEmpresaBloqueada;
	}

	public void setCmbEmpresaBloqueada(ComboBox cmbEmpresaBloqueada) {
		this.cmbEmpresaBloqueada = cmbEmpresaBloqueada;
	}

	public ComboBox getCmbMostrandoAvisoCorte() {
		return cmbMostrandoAvisoCorte;
	}

	public void setCmbMostrandoAvisoCorte(ComboBox cmbMostrandoAvisoCorte) {
		this.cmbMostrandoAvisoCorte = cmbMostrandoAvisoCorte;
	}

	public ComboBox getCmbTipoFatura() {
		return cmbTipoFatura;
	}

	public void setCmbTipoFatura(ComboBox cmbTipoFatura) {
		this.cmbTipoFatura = cmbTipoFatura;
	}

	public ComboBox getCmbEmpresaBloqueada1() {
		return cmbEmpresaBloqueada1;
	}

	public void setCmbEmpresaBloqueada1(ComboBox cmbEmpresaBloqueada1) {
		this.cmbEmpresaBloqueada1 = cmbEmpresaBloqueada1;
	}

	public PopupDateField getDtDataEntrada() {
		return dtDataEntrada;
	}

	public void setDtDataEntrada(PopupDateField dtDataEntrada) {
		this.dtDataEntrada = dtDataEntrada;
	}

	public PopupDateField getDtVencimentoPromocao() {
		return dtVencimentoPromocao;
	}

	public void setDtVencimentoPromocao(PopupDateField dtVencimentoPromocao) {
		this.dtVencimentoPromocao = dtVencimentoPromocao;
	}

	public PopupDateField getDtDiaVencimento() {
		return dtDiaVencimento;
	}

	public void setDtDiaVencimento(PopupDateField dtDiaVencimento) {
		this.dtDiaVencimento = dtDiaVencimento;
	}

	public TextField getTxtTelefone() {
		return txtTelefone;
	}

	public void setTxtTelefone(TextField txtTelefone) {
		this.txtTelefone = txtTelefone;
	}

	public TextArea getTxtObsFechamento() {
		return txtObsFechamento;
	}

	public void setTxtObsFechamento(TextArea txtObsFechamento) {
		this.txtObsFechamento = txtObsFechamento;
	}

	public ParametroClienteFormController getController() {
		return controller;
	}

	public void setController(ParametroClienteFormController controller) {
		this.controller = controller;
	}

	public ManyToOneCombo<EmpresaEntity> getCmbEmpresa() {
		return cmbEmpresa;
	}

	public void setCmbEmpresa(ManyToOneCombo<EmpresaEntity> cmbEmpresa) {
		this.cmbEmpresa = cmbEmpresa;
	}
	
}
