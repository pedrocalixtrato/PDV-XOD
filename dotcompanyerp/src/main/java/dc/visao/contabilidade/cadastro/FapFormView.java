package dc.visao.contabilidade.cadastro;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.contabilidade.cadastro.FapFormController;
import dc.visao.framework.util.ComponentUtil;

public class FapFormView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private Panel panel_1;

	@AutoGenerated
	private VerticalLayout verticalLayout_2;

	@AutoGenerated
	private GridLayout gridLayout_1;

	@AutoGenerated
	private TextField tfFap;

	@AutoGenerated
	private PopupDateField pdfDataInicial;

	@AutoGenerated
	private PopupDateField pdfDataFinal;

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private FapFormController controller;

	public FapFormView(final FapFormController controller) {
		this.controller = controller;

		buildMainLayout();
		setCompositionRoot(this.mainLayout);
	}

	public TextField getTfFap() {
		return tfFap;
	}

	public void setTfFap(TextField tfFap) {
		this.tfFap = tfFap;
	}

	public PopupDateField getPdfDataInicial() {
		return pdfDataInicial;
	}

	public void setPdfDataInicial(PopupDateField pdfDataInicial) {
		this.pdfDataInicial = pdfDataInicial;
	}

	public PopupDateField getPdfDataFinal() {
		return pdfDataFinal;
	}

	public void setPdfDataFinal(PopupDateField pdfDataFinal) {
		this.pdfDataFinal = pdfDataFinal;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("100.0%");

		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_1.setContent(verticalLayout_2);

		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(false);

		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		verticalLayout_2.addComponent(gridLayout_1);

		return verticalLayout_2;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		// gridLayout_1.setHeight("100.0%");
		gridLayout_1.setMargin(false);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setRows(4);
		gridLayout_1.setColumns(4);

		// tfFap
		tfFap = ComponentUtil.buildNumericField("Fap:");
		gridLayout_1.addComponent(tfFap, 0, 1, 1,1);

		// pdfDataInicial
		pdfDataInicial = ComponentUtil.buildPopupDateField("Data inicial:");
		gridLayout_1.addComponent(pdfDataInicial, 2, 1, 3,1);

		// pdfDataFinal
		pdfDataFinal = ComponentUtil.buildPopupDateField("Data t√©rmino:");
		gridLayout_1.addComponent(pdfDataFinal, 0, 2, 1,2);

		return gridLayout_1;
	}

}