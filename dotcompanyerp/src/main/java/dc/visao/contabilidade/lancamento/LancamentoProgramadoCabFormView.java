package dc.visao.contabilidade.lancamento;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.contabilidade.lancamento.LancamentoProgramadoCabFormController;
import dc.entidade.contabilidade.lancamento.LoteEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneCombo;

public class LancamentoProgramadoCabFormView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private Panel panel_1;

	@AutoGenerated
	private VerticalLayout verticalLayout_2;

	@AutoGenerated
	private GridLayout gridLayout_1;

	@AutoGenerated
	private PopupDateField pdfDataInclusao;

	@AutoGenerated
	private PopupDateField pdfDataRealizada;

	@AutoGenerated
	private PopupDateField pdfDataPrevista;

	@AutoGenerated
	private TextField tfTipo;

	@AutoGenerated
	private TextField tfLiberado;

	@AutoGenerated
	private ManyToOneCombo<LoteEntity> cbLote;

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private LancamentoProgramadoCabFormController controller;

	public LancamentoProgramadoCabFormView(
			final LancamentoProgramadoCabFormController controller) {
		this.controller = controller;

		buildMainLayout();
		setCompositionRoot(this.mainLayout);
	}

	/**
	 * GETS E SETS
	 */

	public PopupDateField getPdfDataInclusao() {
		return pdfDataInclusao;
	}

	public void setPdfDataInclusao(PopupDateField pdfDataInclusao) {
		this.pdfDataInclusao = pdfDataInclusao;
	}

	public PopupDateField getPdfDataRealizada() {
		return pdfDataRealizada;
	}

	public void setPdfDataRealizada(PopupDateField pdfDataRealizada) {
		this.pdfDataRealizada = pdfDataRealizada;
	}

	public PopupDateField getPdfDataPrevista() {
		return pdfDataPrevista;
	}

	public void setPdfDataPrevista(PopupDateField pdfDataPrevista) {
		this.pdfDataPrevista = pdfDataPrevista;
	}

	public TextField getTfTipo() {
		return tfTipo;
	}

	public void setTfTipo(TextField tfTipo) {
		this.tfTipo = tfTipo;
	}

	public TextField getTfLiberado() {
		return tfLiberado;
	}

	public void setTfLiberado(TextField tfLiberado) {
		this.tfLiberado = tfLiberado;
	}

	public ManyToOneCombo<LoteEntity> getCbLote() {
		return cbLote;
	}

	public void setCbLote(ManyToOneCombo<LoteEntity> cbLote) {
		this.cbLote = cbLote;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("100.0%");

		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_1.setContent(verticalLayout_2);

		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(false);

		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		verticalLayout_2.addComponent(gridLayout_1);

		return verticalLayout_2;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		// gridLayout_1.setHeight("100.0%");
		gridLayout_1.setMargin(false);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setRows(20);
		gridLayout_1.setColumns(2);

		// pdfDataInclusao
		pdfDataInclusao = new PopupDateField();
		pdfDataInclusao.setCaption("Data de inclus√£o:");
		pdfDataInclusao.setImmediate(false);
		pdfDataInclusao.setWidth("175px");
		pdfDataInclusao.setHeight("-1px");
		pdfDataInclusao.setSizeFull();
		gridLayout_1.addComponent(pdfDataInclusao, 0, 1);

		// pdfDataRealizada
		pdfDataRealizada = new PopupDateField();
		pdfDataRealizada.setCaption("Data realizada:");
		pdfDataRealizada.setImmediate(false);
		pdfDataRealizada.setWidth("175px");
		pdfDataRealizada.setHeight("-1px");
		pdfDataRealizada.setSizeFull();
		gridLayout_1.addComponent(pdfDataRealizada, 1, 1);

		// pdfDataPrevista
		pdfDataPrevista = new PopupDateField();
		pdfDataPrevista.setCaption("Data prevista:");
		pdfDataPrevista.setImmediate(false);
		pdfDataPrevista.setWidth("175px");
		pdfDataPrevista.setHeight("-1px");
		pdfDataPrevista.setSizeFull();
		gridLayout_1.addComponent(pdfDataPrevista, 0, 2);

		// tfTipo
		tfTipo = new TextField();
		tfTipo.setCaption("Tipo:");
		tfTipo.setImmediate(false);
		tfTipo.setWidth("175px");
		tfTipo.setHeight("-1px");
		tfTipo.setSizeFull();
		tfTipo.setNullRepresentation("");
		gridLayout_1.addComponent(tfTipo, 1, 2);

		// tfLiberado
		tfLiberado = new TextField();
		tfLiberado.setCaption("Liberado:");
		tfLiberado.setImmediate(false);
		tfLiberado.setWidth("175px");
		tfLiberado.setHeight("-1px");
		tfLiberado.setSizeFull();
		tfLiberado.setNullRepresentation("");
		gridLayout_1.addComponent(tfLiberado, 0, 3);

		// cbLote
		cbLote = new ManyToOneCombo<>();
		cbLote.setCaption("Lote:");
		cbLote.setImmediate(false);
		cbLote.setWidth("175px");
		cbLote.setHeight("-1px");
		cbLote.setSizeFull();
		gridLayout_1.addComponent(cbLote, 1, 3);

		return gridLayout_1;
	}

}