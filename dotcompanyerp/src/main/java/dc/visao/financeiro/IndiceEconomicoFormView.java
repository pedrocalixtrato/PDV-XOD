package dc.visao.financeiro;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.financeiro.IndiceEconomicoFormController;
import dc.entidade.geral.diverso.PaisEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneComboField;
import dc.visao.framework.util.ComponentUtil;

public class IndiceEconomicoFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private GridLayout glGeral;
	@AutoGenerated
	private TextArea txtDescricao;
	@AutoGenerated
	private TextField txtNome;
	@AutoGenerated
	private TextField txtSigla;
	
	@AutoGenerated
	private ManyToOneComboField<PaisEntity> cbPais;
	
	
	IndiceEconomicoFormController controller;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public IndiceEconomicoFormView(IndiceEconomicoFormController controller) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.controller = controller;
	}

	@AutoGenerated
	private void buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		glGeral = bglGeral();
		mainLayout.addComponent(glGeral);
		
	}

	/**
	 * GERAL
	 */

	@AutoGenerated
	private GridLayout bglGeral() {
		// common part: create layout
		glGeral = new GridLayout(8, 8);
		glGeral.setImmediate(false);
		glGeral.setWidth("100.0%");
		glGeral.setHeight("-1px");
		glGeral.setMargin(false);
		glGeral.setSpacing(true);
		
		// cbPais
		cbPais = new ManyToOneComboField<>(PaisEntity.class);
		cbPais.setCaption("País");
		glGeral.addComponent(cbPais, 0,0);
		
		// txtSigla
		txtSigla = ComponentUtil.buildTextField("Sigla");
		txtSigla.setImmediate(false);
		glGeral.addComponent(txtSigla,0 ,1, 3,1);

		// txtNome
		txtNome = ComponentUtil.buildTextField("Nome");
		txtNome.setImmediate(false);
		glGeral.addComponent(txtNome,0,2,3,2);

		// txtDescricao
		txtDescricao = ComponentUtil.buildTextArea("Descrição");
		txtDescricao.setImmediate(false);
		glGeral.addComponent(txtDescricao,0,3,3,3);

		return glGeral;
	}

	public ManyToOneComboField<PaisEntity> getCbPais() {
		return cbPais;
	}

	public void setCbPais(ManyToOneComboField<PaisEntity> cbPais) {
		this.cbPais = cbPais;
	}

	public TextArea getTxtDescricao() {
		return txtDescricao;
	}

	public void setTxtDescricao(TextArea txtDescricao) {
		this.txtDescricao = txtDescricao;
	}

	public TextField getTxtNome() {
		return txtNome;
	}

	public void setTxtNome(TextField txtNome) {
		this.txtNome = txtNome;
	}

	public TextField getTxtSigla() {
		return txtSigla;
	}

	public void setTxtSigla(TextField txtSigla) {
		this.txtSigla = txtSigla;
	}

}