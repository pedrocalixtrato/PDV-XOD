package dc.visao.financeiro;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.financeiro.PlanoCentroResultadoFormController;
import dc.visao.framework.util.ComponentUtil;

/**
 * 
 * @author Wesley Jr /* Nessa classe temos a Tela (DESIGN), onde criamos o
 *         campos que a Tela contém tudo que ela precisa ter
 * 
 */

@SuppressWarnings("serial")
public class PlanoCentroResultadoFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private GridLayout glGeral;
	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private PopupDateField dtDataInclusao;
	@AutoGenerated
	private TextField txtNiveis;
	@AutoGenerated
	private TextField txtMascara;
	@AutoGenerated
	private TextField txtNome;
	
	PlanoCentroResultadoFormController controller;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public PlanoCentroResultadoFormView(PlanoCentroResultadoFormController controller) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		this.controller = controller;
	}

	public PopupDateField getDtDataInclusao() {
		return dtDataInclusao;
	}

	public void setDtDataInclusao(PopupDateField dtDataInclusao) {
		this.dtDataInclusao = dtDataInclusao;
	}

	public TextField getTxtNiveis() {
		return txtNiveis;
	}

	public void setTxtNiveis(TextField txtNiveis) {
		this.txtNiveis = txtNiveis;
	}

	public TextField getTxtMascara() {
		return txtMascara;
	}

	public void setTxtMascara(TextField txtMascara) {
		this.txtMascara = txtMascara;
	}

	public TextField getTxtNome() {
		return txtNome;
	}

	public void setTxtNome(TextField txtNome) {
		this.txtNome = txtNome;
	}

	@AutoGenerated
	private void buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		glGeral = bglGeral();
		mainLayout.addComponent(glGeral);
		
	}

	/**
	 * GERAL
	 */

	@AutoGenerated
	private GridLayout bglGeral() {
		// common part: create layout
		glGeral = new GridLayout(8, 8);
		glGeral.setImmediate(false);
		glGeral.setWidth("100.0%");
		glGeral.setHeight("-1px");
		glGeral.setMargin(false);
		glGeral.setSpacing(true);
		// txtNome
		txtNome = ComponentUtil.buildTextField("Nome");
		glGeral.addComponent(txtNome, 0, 0, 1,0);

		// txtMascara
		txtMascara = ComponentUtil.buildTextField("Máscara");
		glGeral.addComponent(txtMascara, 2,0);

		// txtNiveis
		txtNiveis = ComponentUtil.buildNumberField("Níveis");
		glGeral.addComponent(txtNiveis,0,1);

		// dtDataInclusao
		dtDataInclusao = ComponentUtil.buildPopupDateField("Data Inclusão");
		dtDataInclusao.setImmediate(false);
		glGeral.addComponent(dtDataInclusao, 1,1);

		return glGeral;
	}

}