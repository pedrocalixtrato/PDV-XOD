package dc.visao.financeiro;

import org.vaadin.addons.maskedtextfield.MaskedTextField;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.controller.financeiro.AgenciaBancoFormController;
import dc.entidade.financeiro.BancoEntity;
import dc.visao.framework.component.manytoonecombo.ManyToOneComboField;
import dc.visao.framework.util.ComponentUtil;

public class AgenciaBancoFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private GridLayout glGeral;

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private TextArea taObservacao;

	@AutoGenerated
	private TextField tfGerente;

	@AutoGenerated
	private MaskedTextField tfCep;
	
	@AutoGenerated
	private TextField tfTelefone, tfContato;

	@AutoGenerated
	private ComboBox cbUf;

	@AutoGenerated
	private TextField tfMunicipio;

	@AutoGenerated
	private TextField tfBairro;

	@AutoGenerated
	private TextField tfNumero;

	@AutoGenerated
	private TextField tfLogradouro;

	@AutoGenerated
	private TextField tfNome;

	@AutoGenerated
	private ManyToOneComboField<BancoEntity> mocBanco;

	@AutoGenerated
	private TextField tfCodigo;

	private AgenciaBancoFormController controller;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public AgenciaBancoFormView(AgenciaBancoFormController controller) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		this.controller = controller;
	}

	public TextArea getTaObservacao() {
		return taObservacao;
	}

	public void setTaObservacao(TextArea taObservacao) {
		this.taObservacao = taObservacao;
	}

	public TextField getTfGerente() {
		return tfGerente;
	}

	public void setTfGerente(TextField tfGerente) {
		this.tfGerente = tfGerente;
	}

	public TextField getTfContato() {
		return tfContato;
	}

	public void setTfContato(TextField tfContato) {
		this.tfContato = tfContato;
	}

	public TextField getTfTelefone() {
		return tfTelefone;
	}

	public void setTfTelefone(TextField tfTelefone) {
		this.tfTelefone = tfTelefone;
	}

	public ComboBox getCbUf() {
		return cbUf;
	}

	public void setCbUf(ComboBox cbUf) {
		this.cbUf = cbUf;
	}

	public TextField getTfMunicipio() {
		return tfMunicipio;
	}

	public void setTfMunicipio(TextField tfMunicipio) {
		this.tfMunicipio = tfMunicipio;
	}

	public MaskedTextField getTfCep() {
		return tfCep;
	}

	public void setTfCep(MaskedTextField tfCep) {
		this.tfCep = tfCep;
	}

	public TextField getTfBairro() {
		return tfBairro;
	}

	public void setTfBairro(TextField tfBairro) {
		this.tfBairro = tfBairro;
	}

	public TextField getTfNumero() {
		return tfNumero;
	}

	public void setTfNumero(TextField tfNumero) {
		this.tfNumero = tfNumero;
	}

	public TextField getTfLogradouro() {
		return tfLogradouro;
	}

	public void setTfLogradouro(TextField tfLogradouro) {
		this.tfLogradouro = tfLogradouro;
	}

	public TextField getTfNome() {
		return tfNome;
	}

	public void setTfNome(TextField tfNome) {
		this.tfNome = tfNome;
	}

	public ManyToOneComboField<BancoEntity> getMocBanco() {
		return mocBanco;
	}

	public void setMocBanco(ManyToOneComboField<BancoEntity> mocBanco) {
		this.mocBanco = mocBanco;
	}

	public TextField getTfCodigo() {
		return tfCodigo;
	}

	public void setTfCodigo(TextField tfCodigo) {
		this.tfCodigo = tfCodigo;
	}

	@AutoGenerated
	private void buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		glGeral = bglGeral();
		mainLayout.addComponent(glGeral);
		
	}

	/**
	 * GERAL
	 */

	@AutoGenerated
	private GridLayout bglGeral() {
		// common part: create layout
		glGeral = new GridLayout(8, 8);
		glGeral.setImmediate(false);
		glGeral.setWidth("100.0%");
		glGeral.setHeight("-1px");
		glGeral.setMargin(false);
		glGeral.setSpacing(true);

		// tfCodigo
		tfCodigo = ComponentUtil.buildTextField("Código");
		tfCodigo.setImmediate(false);
		glGeral.addComponent(tfCodigo, 0,0);

		// mocBanco
		mocBanco = new ManyToOneComboField<>(BancoEntity.class);
		mocBanco.setCaption("Banco");
		glGeral.addComponent(mocBanco, 1,0);

		// tfNome
		tfNome = ComponentUtil.buildTextField("Nome");
		tfNome.setImmediate(false);
		glGeral.addComponent(tfNome,0,1, 1,1);

		// tfLogradouro
		tfLogradouro = ComponentUtil.buildTextField("Logradouro");
		tfLogradouro.setImmediate(false);
		glGeral.addComponent(tfLogradouro, 2,1, 3,1);

		// tfNumero
		tfNumero = ComponentUtil.buildTextField("Número");
		tfNumero.setImmediate(false);
		glGeral.addComponent(tfNumero,0, 2);

		// tfBairro
		tfBairro = ComponentUtil.buildTextField("Bairro");
		tfBairro.setImmediate(false);
		glGeral.addComponent(tfBairro, 1,2);

		// tfCep
		tfCep = ComponentUtil.buildMaskedTextField("CEP", "#####-###");
		tfCep.setMaskClientOnly(true);
		tfCep.setImmediate(false);
		glGeral.addComponent(tfCep, 2,2);

		// tfMunicipio
		tfMunicipio = ComponentUtil.buildTextField("Município");
		tfMunicipio.setImmediate(false);
		glGeral.addComponent(tfMunicipio,0,3);

		// cbUf
		cbUf = ComponentUtil.buildComboBox("UF");
		glGeral.addComponent(cbUf, 1,3);

		// tfTelefone
		tfTelefone = ComponentUtil.buildPhoneField("Telefone");
		tfTelefone.setImmediate(false);
		glGeral.addComponent(tfTelefone,0,4);

		// tfContato
		tfContato = ComponentUtil.buildPhoneField("Contato");
		tfContato.setImmediate(false);
		glGeral.addComponent(tfContato, 1,4);

		// tfGerente
		tfGerente = ComponentUtil.buildTextField("Gerente");
		tfGerente.setImmediate(false);
		glGeral.addComponent(tfGerente, 2,4);

		// taObservacao
		taObservacao = ComponentUtil.buildTextArea("Observação");
		taObservacao.setImmediate(false);
		glGeral.addComponent(taObservacao, 0,6, 3,6);

		return glGeral;
	}

}