package dc.visao.nfe;

import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Field;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TableFieldFactory;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.control.validator.ObjectValidator;
import dc.controller.nfe.ProdutoServicoFormController;
import dc.entidade.nfe.NfeDetEspecificoArmamentoEntity;
import dc.visao.framework.component.SubFormComponent;

/**
 * 
 * 
 */

public class NfeDetEspecificoArmamentoFormView extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private ProdutoServicoFormController controller;

	/**
	 * 
	 */

	@AutoGenerated
	private String titulo = "Armamento";

	@AutoGenerated
	private VerticalLayout vlNdeArmamento;

	@AutoGenerated
	private Panel plNdeArmamentoSubForm;

	@AutoGenerated
	private Panel plNdeArmamento;

	@AutoGenerated
	private GridLayout glNdeArmamento;

	@AutoGenerated
	private SubFormComponent<NfeDetEspecificoArmamentoEntity, Integer> sfNdeArmamento;

	@AutoGenerated
	private TextField tfTipoArmaArmamento;

	@AutoGenerated
	private TextField tfNumeroSerieArmaArmamento;

	@AutoGenerated
	private TextField tfNumeroSerieCanoArmamento;

	@AutoGenerated
	private TextField tfDescricaoArmamento;

	public String getTitulo() {
		return titulo;
	}

	public SubFormComponent<NfeDetEspecificoArmamentoEntity, Integer> getSfNdeArmamento() {
		return sfNdeArmamento;
	}

	public void setSfNdeArmamento(
			SubFormComponent<NfeDetEspecificoArmamentoEntity, Integer> sfNdeArmamento) {
		this.sfNdeArmamento = sfNdeArmamento;
	}

	public TextField getTfTipoArmaArmamento() {
		return tfTipoArmaArmamento;
	}

	public void setTfTipoArmaArmamento(TextField tfTipoArmaArmamento) {
		this.tfTipoArmaArmamento = tfTipoArmaArmamento;
	}

	public TextField getTfNumeroSerieArmaArmamento() {
		return tfNumeroSerieArmaArmamento;
	}

	public void setTfNumeroSerieArmaArmamento(
			TextField tfNumeroSerieArmaArmamento) {
		this.tfNumeroSerieArmaArmamento = tfNumeroSerieArmaArmamento;
	}

	public TextField getTfNumeroSerieCanoArmamento() {
		return tfNumeroSerieCanoArmamento;
	}

	public void setTfNumeroSerieCanoArmamento(
			TextField tfNumeroSerieCanoArmamento) {
		this.tfNumeroSerieCanoArmamento = tfNumeroSerieCanoArmamento;
	}

	public TextField getTfDescricaoArmamento() {
		return tfDescricaoArmamento;
	}

	public void setTfDescricaoArmamento(TextField tfDescricaoArmamento) {
		this.tfDescricaoArmamento = tfDescricaoArmamento;
	}

	/**
	 * CONSTRUTOR
	 * 
	 * @param controller
	 */

	public NfeDetEspecificoArmamentoFormView(
			ProdutoServicoFormController controller) {
		this.controller = controller;
	}

	/**
	 * GET / SET
	 */

	@AutoGenerated
	public VerticalLayout bvlNdeArmamento() {
		// common part: create layout
		vlNdeArmamento = new VerticalLayout();
		vlNdeArmamento.setImmediate(false);
		vlNdeArmamento.setWidth("100.0%");
		vlNdeArmamento.setHeight("100.0%");
		vlNdeArmamento.setMargin(true);
		vlNdeArmamento.setSpacing(true);

		// panel_2
		vlNdeArmamento.addComponent(bplNdeArmamentoSubForm());

		// panel_3
		vlNdeArmamento.addComponent(bplNdeArmamento());

		return vlNdeArmamento;
	}

	@AutoGenerated
	private Panel bplNdeArmamentoSubForm() {
		// common part: create layout
		plNdeArmamentoSubForm = new Panel();
		plNdeArmamentoSubForm.setImmediate(false);
		plNdeArmamentoSubForm.setSizeFull();
		plNdeArmamentoSubForm.setEnabled(false);

		plNdeArmamentoSubForm.setContent(buildNdeArmamentoSubForm());

		return plNdeArmamentoSubForm;
	}

	@AutoGenerated
	private Panel bplNdeArmamento() {
		// common part: create layout
		plNdeArmamento = new Panel();
		plNdeArmamento.setImmediate(false);
		plNdeArmamento.setSizeFull();

		plNdeArmamento.setContent(bglNdeArmamento());

		return plNdeArmamento;
	}

	@AutoGenerated
	private GridLayout bglNdeArmamento() {
		// common part: create layout
		glNdeArmamento = new GridLayout();
		glNdeArmamento.setImmediate(false);
		glNdeArmamento.setSizeUndefined();
		glNdeArmamento.setMargin(true);
		glNdeArmamento.setSpacing(true);
		glNdeArmamento.setRows(6);
		glNdeArmamento.setColumns(2);
		glNdeArmamento.setEnabled(false);

		// tfTipoArmaArmamento
		tfTipoArmaArmamento = new TextField("Tipo da arma:");
		tfTipoArmaArmamento.setWidth("-1px");
		tfTipoArmaArmamento.setHeight("-1px");
		tfTipoArmaArmamento.setSizeFull();
		tfTipoArmaArmamento.setNullRepresentation("");
		tfTipoArmaArmamento.setImmediate(true);
		tfTipoArmaArmamento.setId("tfTipoArmaArmamento");
		tfTipoArmaArmamento.addValueChangeListener(new ValueChangeListener() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if (ObjectValidator.validateEventValue(event)) {
					controller.ndeArmamentoSetarValor(tfTipoArmaArmamento
							.getId(), event.getProperty().getValue());
				}
			}
		});
		glNdeArmamento.addComponent(tfTipoArmaArmamento, 0, 0);

		// tfNumeroSerieArmaArmamento
		tfNumeroSerieArmaArmamento = new TextField("Número da série da arma:");
		tfNumeroSerieArmaArmamento.setWidth("-1px");
		tfNumeroSerieArmaArmamento.setHeight("-1px");
		tfNumeroSerieArmaArmamento.setSizeFull();
		tfNumeroSerieArmaArmamento.setNullRepresentation("");
		tfNumeroSerieArmaArmamento.setImmediate(true);
		tfNumeroSerieArmaArmamento.setId("tfNumeroSerieArmaArmamento");
		tfNumeroSerieArmaArmamento
				.addValueChangeListener(new ValueChangeListener() {
					/**
					 * 
					 */
					private static final long serialVersionUID = 1L;

					@Override
					public void valueChange(ValueChangeEvent event) {
						// TODO Auto-generated method stub
						if (ObjectValidator.validateEventValue(event)) {
							controller.ndeArmamentoSetarValor(
									tfNumeroSerieArmaArmamento.getId(), event
											.getProperty().getValue());
						}
					}
				});
		glNdeArmamento.addComponent(tfNumeroSerieArmaArmamento, 1, 0);

		// tfNumeroSerieCanoArmamento
		tfNumeroSerieCanoArmamento = new TextField("Número da série do cano:");
		tfNumeroSerieCanoArmamento.setWidth("-1px");
		tfNumeroSerieCanoArmamento.setHeight("-1px");
		tfNumeroSerieCanoArmamento.setSizeFull();
		tfNumeroSerieCanoArmamento.setNullRepresentation("");
		tfNumeroSerieCanoArmamento.setImmediate(true);
		tfNumeroSerieCanoArmamento.setId("tfNumeroSerieCanoArmamento");
		tfNumeroSerieCanoArmamento
				.addValueChangeListener(new ValueChangeListener() {
					/**
					 * 
					 */
					private static final long serialVersionUID = 1L;

					@Override
					public void valueChange(ValueChangeEvent event) {
						// TODO Auto-generated method stub
						if (ObjectValidator.validateEventValue(event)) {
							controller.ndeArmamentoSetarValor(
									tfNumeroSerieCanoArmamento.getId(), event
											.getProperty().getValue());
						}
					}
				});
		glNdeArmamento.addComponent(tfNumeroSerieCanoArmamento, 0, 1);

		// tfDescricaoArmamento
		tfDescricaoArmamento = new TextField("Descrição:");
		tfDescricaoArmamento.setWidth("-1px");
		tfDescricaoArmamento.setHeight("-1px");
		tfDescricaoArmamento.setSizeFull();
		tfDescricaoArmamento.setNullRepresentation("");
		tfDescricaoArmamento.setImmediate(true);
		tfDescricaoArmamento.setId("tfDescricaoArmamento");
		tfDescricaoArmamento.addValueChangeListener(new ValueChangeListener() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if (ObjectValidator.validateEventValue(event)) {
					controller.ndeArmamentoSetarValor(tfDescricaoArmamento
							.getId(), event.getProperty().getValue());
				}
			}
		});
		glNdeArmamento.addComponent(tfDescricaoArmamento, 1, 1);

		return glNdeArmamento;
	}

	private SubFormComponent<NfeDetEspecificoArmamentoEntity, Integer> buildNdeArmamentoSubForm() {
		// common part: create layout
		sfNdeArmamento = new SubFormComponent<NfeDetEspecificoArmamentoEntity, Integer>(
				NfeDetEspecificoArmamentoEntity.class, new String[] {
						"tipoArma", "numeroSerieArma", "descricao" },
				new String[] { "Tipo de arma", "Número de série da arma",
						"Descrição" }) {

			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			protected TableFieldFactory getFieldFactory() {
				return new TableFieldFactory() {

					/**
					 * 
					 */
					private static final long serialVersionUID = 1L;

					@Override
					public Field<?> createField(Container container,
							Object itemId, Object propertyId,
							Component uiContext) {
						return null;
					}

				};
			}

			@Override
			public boolean validateItems(
					List<NfeDetEspecificoArmamentoEntity> items) {
				// TODO Auto-generated method stub
				return true;
			}

			@Override
			protected NfeDetEspecificoArmamentoEntity getNovo() {
				// TODO Auto-generated method stub
				NfeDetEspecificoArmamentoEntity ent = controller
						.ndeArmamentoAdicionar();

				return ent;
			}

			@Override
			protected void onSelect(NfeDetEspecificoArmamentoEntity item) {
				// TODO Auto-generated method stub
				// super.onSelect(item);

				controller.ndeArmamentoSelecionar(item);
			}

		};

		return sfNdeArmamento;
	}

	/**
	 * NFEDETALHE - POPULAR
	 * 
	 * @param nfeDetalheList
	 */

	public void carregarSfNdeArmamento(
			List<NfeDetEspecificoArmamentoEntity> ndeArmamentoList) {
		try {
			sfNdeArmamento.fillWith(ndeArmamentoList);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}