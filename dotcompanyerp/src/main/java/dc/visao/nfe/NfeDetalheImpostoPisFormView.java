package dc.visao.nfe;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.control.enums.CstPisEn;
import dc.control.validator.ObjectValidator;
import dc.controller.nfe.ProdutoServicoFormController;

/**
 * 
 * 
 */

public class NfeDetalheImpostoPisFormView extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private ProdutoServicoFormController controller;

	/**
	 * 
	 */

	@AutoGenerated
	private String titulo = "PIS";

	@AutoGenerated
	private VerticalLayout vlNdiPis;

	@AutoGenerated
	private Panel plNdiPis;

	@AutoGenerated
	private GridLayout glNdiPis;

	@AutoGenerated
	private ComboBox cbCstPis;

	@AutoGenerated
	private TextField tfQtdVendidaPis;

	@AutoGenerated
	private TextField tfBaseCalculoBcPis;

	@AutoGenerated
	private TextField tfAliquotaPercentualPis;

	@AutoGenerated
	private TextField tfAliquotaReaisPis;

	@AutoGenerated
	private TextField tfValorPis;

	public GridLayout getGlNdiPis() {
		return glNdiPis;
	}

	public String getTitulo() {
		return titulo;
	}

	public ComboBox getCbCstPis() {
		return cbCstPis;
	}

	public void setCbCstPis(ComboBox cbCstPis) {
		this.cbCstPis = cbCstPis;
	}

	public TextField getTfQtdVendidaPis() {
		return tfQtdVendidaPis;
	}

	public void setTfQtdVendidaPis(TextField tfQtdVendidaPis) {
		this.tfQtdVendidaPis = tfQtdVendidaPis;
	}

	public TextField getTfBaseCalculoBcPis() {
		return tfBaseCalculoBcPis;
	}

	public void setTfBaseCalculoBcPis(TextField tfBaseCalculoBcPis) {
		this.tfBaseCalculoBcPis = tfBaseCalculoBcPis;
	}

	public TextField getTfAliquotaPercentualPis() {
		return tfAliquotaPercentualPis;
	}

	public void setTfAliquotaPercentualPis(TextField tfAliquotaPercentualPis) {
		this.tfAliquotaPercentualPis = tfAliquotaPercentualPis;
	}

	public TextField getTfAliquotaReaisPis() {
		return tfAliquotaReaisPis;
	}

	public void setTfAliquotaReaisPis(TextField tfAliquotaReaisPis) {
		this.tfAliquotaReaisPis = tfAliquotaReaisPis;
	}

	public TextField getTfValorPis() {
		return tfValorPis;
	}

	public void setTfValorPis(TextField tfValorPis) {
		this.tfValorPis = tfValorPis;
	}

	/**
	 * CONSTRUTOR
	 * 
	 * @param controller
	 */

	public NfeDetalheImpostoPisFormView(ProdutoServicoFormController controller) {
		this.controller = controller;
	}

	/**
	 * GET / SET
	 */

	@AutoGenerated
	public VerticalLayout bvlNdiPis() {
		// common part: create layout
		vlNdiPis = new VerticalLayout();
		vlNdiPis.setImmediate(false);
		vlNdiPis.setWidth("100.0%");
		vlNdiPis.setHeight("100.0%");
		vlNdiPis.setMargin(true);
		vlNdiPis.setSpacing(true);

		// panel_2
		vlNdiPis.addComponent(bplNdiPis());

		return vlNdiPis;
	}

	@AutoGenerated
	private Panel bplNdiPis() {
		// common part: create layout
		plNdiPis = new Panel();
		plNdiPis.setImmediate(false);
		plNdiPis.setSizeFull();

		plNdiPis.setContent(bglNdiPis());

		return plNdiPis;
	}

	@AutoGenerated
	private GridLayout bglNdiPis() {
		// common part: create layout
		glNdiPis = new GridLayout();
		glNdiPis.setImmediate(false);
		glNdiPis.setSizeUndefined();
		glNdiPis.setMargin(true);
		glNdiPis.setSpacing(true);
		glNdiPis.setRows(4);
		glNdiPis.setColumns(4);
		glNdiPis.setEnabled(false);

		// cbCstPis
		cbCstPis = new ComboBox("CST:");
		cbCstPis.setWidth("-1px");
		cbCstPis.setHeight("-1px");
		cbCstPis.setSizeFull();
		cbCstPis.setImmediate(true);
		cbCstPis.setId("cbCstPis");
		cbCstPis.addValueChangeListener(new ValueChangeListener() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if (ObjectValidator.blankOrNull(event)) {
					controller.ndiPisSetarValor(cbCstPis.getId(), event
							.getProperty().getValue());
				}
			}
		});
		glNdiPis.addComponent(cbCstPis, 0, 0);

		// tfQtdVendidaPis
		tfQtdVendidaPis = new TextField("Quantidade vendida:");
		tfQtdVendidaPis.setWidth("-1px");
		tfQtdVendidaPis.setHeight("-1px");
		tfQtdVendidaPis.setSizeFull();
		tfQtdVendidaPis.setNullRepresentation("");
		tfQtdVendidaPis.setImmediate(true);
		tfQtdVendidaPis.setId("tfQtdVendidaPis");
		tfQtdVendidaPis.addValueChangeListener(new ValueChangeListener() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if (ObjectValidator.blankOrNull(event)) {
					// if (ObjectValidator.validateValue(event)) {
					controller.ndiPisSetarValor(tfQtdVendidaPis.getId(), event
							.getProperty().getValue());
					// }
				} else {
					System.out.println(event);
				}
			}
		});
		glNdiPis.addComponent(tfQtdVendidaPis, 1, 0);

		// tfBaseCalculoBcPis
		tfBaseCalculoBcPis = new TextField("Base de cáculo (BC):");
		tfBaseCalculoBcPis.setWidth("-1px");
		tfBaseCalculoBcPis.setHeight("-1px");
		tfBaseCalculoBcPis.setSizeFull();
		tfBaseCalculoBcPis.setNullRepresentation("");
		tfBaseCalculoBcPis.setImmediate(true);
		tfBaseCalculoBcPis.setId("tfBaseCalculoBcPis");
		tfBaseCalculoBcPis.addValueChangeListener(new ValueChangeListener() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if (ObjectValidator.blankOrNull(event)) {
					// if (ObjectValidator.validateValue(event)) {
					controller.ndiPisSetarValor(tfBaseCalculoBcPis.getId(),
							event.getProperty().getValue());
					// }
				}
			}
		});
		glNdiPis.addComponent(tfBaseCalculoBcPis, 2, 0);

		// tfAliquotaPercentualPis
		tfAliquotaPercentualPis = new TextField("Alíquota percentual:");
		tfAliquotaPercentualPis.setWidth("-1px");
		tfAliquotaPercentualPis.setHeight("-1px");
		tfAliquotaPercentualPis.setSizeFull();
		tfAliquotaPercentualPis.setNullRepresentation("");
		tfAliquotaPercentualPis.setImmediate(true);
		tfAliquotaPercentualPis.setId("tfAliquotaPercentualPis");
		tfAliquotaPercentualPis
				.addValueChangeListener(new ValueChangeListener() {
					/**
					 * 
					 */
					private static final long serialVersionUID = 1L;

					@Override
					public void valueChange(ValueChangeEvent event) {
						// TODO Auto-generated method stub
						if (ObjectValidator.blankOrNull(event)) {
							// if (ObjectValidator.validateValue(event)) {
							controller.ndiPisSetarValor(tfAliquotaPercentualPis
									.getId(), event.getProperty().getValue());
							// }
						}
					}
				});
		glNdiPis.addComponent(tfAliquotaPercentualPis, 3, 0);

		// tfAliquotaReaisPis
		tfAliquotaReaisPis = new TextField("Alíquota reais:");
		tfAliquotaReaisPis.setWidth("-1px");
		tfAliquotaReaisPis.setHeight("-1px");
		tfAliquotaReaisPis.setSizeFull();
		tfAliquotaReaisPis.setNullRepresentation("");
		tfAliquotaReaisPis.setImmediate(true);
		tfAliquotaReaisPis.setId("tfAliquotaReaisPis");
		tfAliquotaReaisPis.addValueChangeListener(new ValueChangeListener() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if (ObjectValidator.blankOrNull(event)) {
					// if (ObjectValidator.validateValue(event)) {
					controller.ndiPisSetarValor(tfAliquotaReaisPis.getId(),
							event.getProperty().getValue());
					// }
				}
			}
		});
		glNdiPis.addComponent(tfAliquotaReaisPis, 0, 1);

		// tfValorPis
		tfValorPis = new TextField("Valor:");
		tfValorPis.setWidth("-1px");
		tfValorPis.setHeight("-1px");
		tfValorPis.setSizeFull();
		tfValorPis.setNullRepresentation("");
		tfValorPis.setImmediate(true);
		tfValorPis.setId("tfValorPis");
		tfValorPis.addValueChangeListener(new ValueChangeListener() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				if (ObjectValidator.blankOrNull(event)) {
					// if (ObjectValidator.validateValue(event)) {
					controller.ndiPisSetarValor(tfValorPis.getId(), event
							.getProperty().getValue());
					// }
				}
			}
		});
		glNdiPis.addComponent(tfValorPis, 1, 1);

		return glNdiPis;
	}

	/**
	 * COMBOBOX
	 */

	public void carregarComboBox() {
		for (CstPisEn en : CstPisEn.values()) {
			this.cbCstPis.addItem(en);
		}
	}

}