package dc.visao.ponto;

import java.math.BigDecimal;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import dc.entidade.ponto.PontoParametro;
import dc.visao.framework.util.ComponentUtil;

public class PontoParametroFormView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private TextField txDuracaoHora;
	@AutoGenerated
	private TextField txPercentualHeNoturna;
	@AutoGenerated
	private TextField txPercentualHeDiurna;
	@AutoGenerated
	private TextField txPeriodoMinimo;
	@AutoGenerated
	private TextField txHoraNoturnaFim;
	@AutoGenerated
	private TextField txHoraNoturnaInicio;
	@AutoGenerated
	private TextField txDiaInicialApuracao;
	
	@AutoGenerated
	private TextField txMesAno;

	@AutoGenerated
	private ComboBox cmbTratamentoHoraMais;
	@AutoGenerated
	private ComboBox cmbTratamentoHoraMenos;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public PontoParametroFormView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	public void preencheForm(PontoParametro currentBean) {
		txDiaInicialApuracao.setValue(currentBean.getDiaInicialApuracao().toString());
		txDuracaoHora.setValue(currentBean.getDuracaoHoraNoturna());
		txHoraNoturnaFim.setValue(currentBean.getHoraNoturnaFim());
		txHoraNoturnaInicio.setValue(currentBean.getHoraNoturnaInicio());
		txMesAno.setValue(currentBean.getMesAno());
		txPercentualHeDiurna.setValue(currentBean.getPercentualHeDiurna().toString().replace('.', ','));
		txPercentualHeNoturna.setValue(currentBean.getPercentualHeNoturna().toString().replace('.', ','));
		txPeriodoMinimo.setValue(currentBean.getPeriodoMinimoInterjornada());
		cmbTratamentoHoraMais.setValue(TratamentoHoraMais.getEnum(currentBean.getTratamentoHoraMais()));
		cmbTratamentoHoraMenos.setValue(TratamentoHoraMenos.getEnum(currentBean.getTratamentoHoraMenos()));
	}

	public void preencheBean(PontoParametro currentBean) {
		currentBean.setDiaInicialApuracao((new BigDecimal(txDiaInicialApuracao.getValue()).intValue()));
		currentBean.setDuracaoHoraNoturna(txDuracaoHora.getValue().toString());
		currentBean.setHoraNoturnaFim(txHoraNoturnaFim.getValue());
		currentBean.setHoraNoturnaInicio(txHoraNoturnaInicio.getValue());
		currentBean.setMesAno(txMesAno.getValue());
		currentBean.setPercentualHeDiurna(new BigDecimal(txPercentualHeDiurna.getValue()));
		currentBean.setPercentualHeNoturna(new BigDecimal(txPercentualHeNoturna.getValue()));
		currentBean.setPeriodoMinimoInterjornada(txPeriodoMinimo.getValue());
		currentBean.setTratamentoHoraMais(((TratamentoHoraMais) cmbTratamentoHoraMais.getValue()).getCodigo());
		currentBean.setTratamentoHoraMenos(((TratamentoHoraMenos) cmbTratamentoHoraMenos.getValue()).getCodigo());
	}

	public TextField getTxDuracaoHora() {
		return txDuracaoHora;
	}

	public void setTxDuracaoHora(TextField txDuracaoHora) {
		this.txDuracaoHora = txDuracaoHora;
	}

	public TextField getTxPercentual() {
		return txPercentualHeNoturna;
	}

	public void setTxPercentual(TextField txPercentual) {
		this.txPercentualHeNoturna = txPercentual;
	}

	public TextField getTxPeriodoMinimo() {
		return txPeriodoMinimo;
	}

	public void setTxPeriodoMinimo(TextField txPeriodoMinimo) {
		this.txPeriodoMinimo = txPeriodoMinimo;
	}

	public TextField getTxHoraNoturnaFim() {
		return txHoraNoturnaFim;
	}

	public void setTxHoraNoturnaFim(TextField txHoraNoturnaFim) {
		this.txHoraNoturnaFim = txHoraNoturnaFim;
	}

	public TextField getTxHoraNoturnaInicio() {
		return txHoraNoturnaInicio;
	}

	public void setTxHoraNoturnaInicio(TextField txHoraNoturnaInicio) {
		this.txHoraNoturnaInicio = txHoraNoturnaInicio;
	}

	public TextField getTxDiaInicialApuracao() {
		return txDiaInicialApuracao;
	}

	public void setTxDiaInicialApuracao(TextField txDiaInicialApuracao) {
		this.txDiaInicialApuracao = txDiaInicialApuracao;
	}

	public TextField getTxPercentualHeDiurna() {
		return txPercentualHeDiurna;
	}

	public void setTxPercentualHeDiurna(TextField txPercentualHeDiurna) {
		this.txPercentualHeDiurna = txPercentualHeDiurna;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		mainLayout.addComponent(gridLayout_1);

		preencheComboBoxes();

		return mainLayout;
	}

	private void preencheComboBoxes() {
		for (TratamentoHoraMais t : TratamentoHoraMais.values()) {
			this.cmbTratamentoHoraMais.addItem(t);
		}

		for (TratamentoHoraMenos t : TratamentoHoraMenos.values()) {
			this.cmbTratamentoHoraMenos.addItem(t);
		}
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setHeight("-1px");
		gridLayout_1.setMargin(false);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setColumns(3);
		gridLayout_1.setRows(6);

		// dtMesAno
		txMesAno = ComponentUtil.buildMaskedTextField("Mês Ano", "##/####");
		gridLayout_1.addComponent(txMesAno, 0, 0);

		// txDiaInicialApuracao
		txDiaInicialApuracao = ComponentUtil.buildNumberField("Dia Inicial Apuração");
		gridLayout_1.addComponent(txDiaInicialApuracao, 1, 0);

		// txHoraNoturnaInicio
		txHoraNoturnaInicio = ComponentUtil.buildMaskedTextField("Hora Noturna Início", "##:##:##");
		gridLayout_1.addComponent(txHoraNoturnaInicio, 0, 1);

		// txHoraNoturnaFim
		txHoraNoturnaFim = ComponentUtil.buildMaskedTextField("Hora Noturna Fim", "##:##:##");
		gridLayout_1.addComponent(txHoraNoturnaFim, 1, 1);

		// txPeriodoMinimo
		txPeriodoMinimo = ComponentUtil.buildMaskedTextField("Período Mínimo Interjornada", "##:##:##");
		gridLayout_1.addComponent(txPeriodoMinimo, 0, 2);

		// txPercentualHeDiurna
		txPercentualHeDiurna = ComponentUtil.buildNumberField("Percentual He Diurna");
		gridLayout_1.addComponent(txPercentualHeDiurna, 1, 2);

		// txPercentualHeNoturna
		txPercentualHeNoturna = ComponentUtil.buildNumberField("Percentual He Noturna");
		gridLayout_1.addComponent(txPercentualHeNoturna, 0, 3);

		// txDuracaoHora
		txDuracaoHora = ComponentUtil.buildMaskedTextField("Duração Hora Noturna", "##:##:##");
		gridLayout_1.addComponent(txDuracaoHora, 1, 3);

		cmbTratamentoHoraMais = ComponentUtil.buildComboBox("Tratamento Hora à mais");
		gridLayout_1.addComponent(cmbTratamentoHoraMais, 0, 4);

		cmbTratamentoHoraMenos = ComponentUtil.buildComboBox("Tratamento Hora à menos");
		gridLayout_1.addComponent(cmbTratamentoHoraMenos, 1, 4);

		return gridLayout_1;
	}

	public TextField getTxPercentualHeNoturna() {
		return txPercentualHeNoturna;
	}

	public void setTxPercentualHeNoturna(TextField txPercentualHeNoturna) {
		this.txPercentualHeNoturna = txPercentualHeNoturna;
	}

	public enum TratamentoHoraMais {
		BANCO_HORAS("Banco de Horas", "B"), PAGAR_EXTRA("Pagar como Extra", "E");

		private TratamentoHoraMais(String label, String codigo) {
			this.label = label;
			this.codigo = codigo;
		}

		private String label;
		private String codigo;

		public static TratamentoHoraMais getEnum(String codigo) {

			for (TratamentoHoraMais e : TratamentoHoraMais.values()) {
				if (e.getCodigo().equalsIgnoreCase(codigo)) {
					return e;
				}
			}

			return null;
		}

		public static TratamentoHoraMais getEnumLabel(String label) {

			for (TratamentoHoraMais e : TratamentoHoraMais.values()) {
				if (e.getLabel().equalsIgnoreCase(label)) {
					return e;
				}
			}

			return null;
		}

		public String getCodigo() {
			return codigo;
		}

		public String getLabel() {
			return label;
		}

		@Override
		public String toString() {
			return label;
		}
	}

	public enum TratamentoHoraMenos {
		BANCO_HORAS("Banco de Horas", "B"), PAGAR_EXTRA("Descontar como Falta", "F");

		private TratamentoHoraMenos(String label, String codigo) {
			this.label = label;
			this.codigo = codigo;
		}

		private String label;
		private String codigo;

		public static TratamentoHoraMenos getEnum(String codigo) {

			for (TratamentoHoraMenos e : TratamentoHoraMenos.values()) {
				if (e.getCodigo().equalsIgnoreCase(codigo)) {
					return e;
				}
			}

			return null;
		}

		public static TratamentoHoraMenos getEnumLabel(String label) {

			for (TratamentoHoraMenos e : TratamentoHoraMenos.values()) {
				if (e.getLabel().equalsIgnoreCase(label)) {
					return e;
				}
			}

			return null;
		}

		public String getCodigo() {
			return codigo;
		}

		public String getLabel() {
			return label;
		}

		@Override
		public String toString() {
			return label;
		}
	}

	public TextField getTxMesAno() {
		return txMesAno;
	}

	public void setTxMesAno(TextField txMesAno) {
		this.txMesAno = txMesAno;
	}

	public ComboBox getCmbTratamentoHoraMais() {
		return cmbTratamentoHoraMais;
	}

	public void setCmbTratamentoHoraMais(ComboBox cmbTratamentoHoraMais) {
		this.cmbTratamentoHoraMais = cmbTratamentoHoraMais;
	}

	public ComboBox getCmbTratamentoHoraMenos() {
		return cmbTratamentoHoraMenos;
	}

	public void setCmbTratamentoHoraMenos(ComboBox cmbTratamentoHoraMenos) {
		this.cmbTratamentoHoraMenos = cmbTratamentoHoraMenos;
	}
}
