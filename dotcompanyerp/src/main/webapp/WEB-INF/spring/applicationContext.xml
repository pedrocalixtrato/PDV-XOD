<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       default-autowire="byName" default-lazy-init="true"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

    <!-- Load configuration properties file -->
    <context:property-placeholder location="WEB-INF/spring/config.properties, file:/etc/doterp/config.properties"
                                  ignore-resource-not-found="true" />

    <!-- Activates various annotations to be detected in bean classes: Spring's
        @Required and @Autowired, as well as JSR 250's @PostConstruct, @PreDestroy
        and @Resource (if available) and JPA's @PersistenceContext and @PersistenceUnit
        (if available). -->
    <context:annotation-config />

    <!-- The controllers are autodetected POJOs labeled with the @Controller
        annotation. DefaultAnnotationHandlerMapping is driven by these annotations
        and is enabled by default with Java 5+: -->
    <context:component-scan base-package="dc.*" />
    <context:component-scan base-package="dc.anotacoes" />

    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="org.postgresql.Driver" />
        <property name="jdbcUrl" value="${database.jdbc_url}" />
        <property name="user" value="${database.user}" />
        <property name="password" value="${database.password}" />

        <property name="maxIdleTime">
            <value>1500</value>
        </property>
        <property name="initialPoolSize">
            <value>5</value>
        </property>
        <property name="minPoolSize">
            <value>3</value>
        </property>
        <property name="maxPoolSize">
            <value>66</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>1500</value>
        </property>
        <property name="acquireIncrement">
            <value>3</value>
        </property>
        <property name="numHelperThreads">
            <value>13</value>
        </property> <!-- 3 is default -->
    </bean>

    <bean id="modelInterceptor" class="dc.framework.ModelInterceptor" />

    <!-- Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
          
        <!-- Referência ao recurso com banco de dados -->
        <property name="dataSource" ref="dataSource" />
        <!-- Refer to Interceptor Here -->
        <property name="entityInterceptor">
            <ref bean="modelInterceptor" />
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.dbcp.validationQuery">select 1</prop>
                <prop key="hibernate.worker.execution">async</prop>
                <prop key="hibernate.worker.thread_pool.size">7</prop>
                <prop key="hibernate.worker.buffer_queue.max">7</prop>

                <!-- EHCache TESTE -->
                <prop key="hibernate.cache.provider_class">net.sf.hibernate.cache.OSCacheProvider </prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>

                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <!-- Em produção, usar hbm2ddl = "validate", NUNCA update ou create-drop -->
                <prop key="hibernate.hbm2ddl.auto">none</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <!-- <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop> -->
                <!-- Utilizar True somente em consultas que são executadas repetidas vezes com os mesmos parâmetros -->
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
                
                <!--  LUCENE_INDEXES2 PARA TESTE -->

                <prop key="hibernate.search.default.indexBase">c:/lucene_indexes</prop>

                <!--  <prop key="hibernate.search.default.indexBase">c:/lucene_indexes2</prop> -->
                <prop key="hibernate.search.default.directory_provider">filesystem</prop> 
                <prop key="hibernate.search.lucene_version">LUCENE_4_3</prop>
                <prop key="lucene.indexer.cacheEnabled">true</prop>
                <!--  <prop key="lucene.indexer.maxLinkAspectCacheSize">10000</prop>
                <prop key="lucene.indexer.maxParentCacheSize">10000</prop>
                <prop key="lucene.indexer.maxPathCacheSize">10000</prop>
                <prop key="lucene.indexer.maxTypeCacheSize">10000</prop>
                <prop key="lucene.indexer.mergerTargetOverlaysBlockingFactor">1</prop>-->

                
                <!--  LUCENE_INDEXES PARA PRODUCAO -->
                <!--  <prop key="hibernate.search.default.indexBase">c:/lucene_indexes</prop> -->
                
                <prop key="hibernate.search.worker.thread_pool.size">30</prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
            </props>
        </property>

        <!-- Pacotes scaneados para registro das entidades persistentes -->
        <property name="packagesToScan">
            <list>
                <value>dc.entidade</value>
            </list>
        </property>
    </bean>

    <!-- Spring transaction management -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory">
        </property>
    </bean>

    <tx:annotation-driven />

    <bean id="hibernateDaoSupport" abstract="true"
          class="org.springframework.orm.hibernate4.support.HibernateDaoSupport">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
        <property name="hibernateTemplate">
            <ref bean="hibernateTemplate" />
        </property>
    </bean>

    <import resource="security.xml" />

</beans>
