<!--
/*
* The MIT License
* 
* Copyright: Copyright (C) 2014 T2Ti.COM
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
* 
* The author may be contacted at: t2ti.com@gmail.com
*
* @author Claudio de Barros (T2Ti.com)
* @version 2.0
*/
-->
<ui:composition template="/WEB-INF/template.xhtml"
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:t2ti="http://java.sun.com/jsf/composite/t2ti">

    <ui:define name="gridDados">
        <p:panel style="border: none" header="Cheque"
            rendered="#{!chequeController.podeConsultar()}">
            <p:outputLabel value="Você não possui acesso a esta função" />
        </p:panel>

        <p:outputPanel id="outputPanelGrid">

            <p:outputPanel rendered="#{chequeController.telaGrid}">

                <p:panel id="panelCentroGrid" style="border: none" header="Cheque"
                     rendered="#{chequeController.podeConsultar()}">

                    <p:dataTable id="dataTableCheque" var="obj"
                        value="#{chequeController.dataModel}" paginator="true"
                        rows="10" rowsPerPageTemplate="5,10,15,20"
                        selection="#{chequeController.objetoSelecionado}"
                        selectionMode="single" resizableColumns="true" lazy="true">

                        <f:facet name="header">
                            <p:commandButton title="Novo" icon="ui-icon-plus"
                                actionListener="#{chequeController.incluir}"
                                update=":form1:outputPanelGrid,:form1:outputPanelDetalhe"
                                disabled="#{!chequeController.podeInserir()}" />
                            <p:commandButton process="dataTableCheque" title="Detalhes"
                                icon="ui-icon-zoomin"
                                actionListener="#{chequeController.alterar()}"
                                update=":form1:outputPanelGrid,:form1:outputPanelDetalhe" />
                            <p:commandButton process="dataTableCheque" title="Excluir"
                                icon="ui-icon-trash"
                                actionListener="#{chequeController.excluir}"
                                update=":form1:outputPanelGrid,:form1:outputPanelDetalhe"
                                disabled="#{!chequeController.podeExcluir()}">
                                <p:confirm header="Confirmação" message="Confirma Exclusão?"
                                    icon="ui-icon-alert" />
                            </p:commandButton>
                        </f:facet>

                        <p:column headerText="Numero">
                            <h:outputLabel value="#{obj.numero}" />
                        </p:column>
                        <p:column headerText="Status Cheque">
                            <h:outputLabel value="#{chequeController.keyFromValue(chequeController.chequeStatus, obj.statusCheque)}" />
                        </p:column>
                        <p:column headerText="Data Status">
                            <h:outputLabel value="#{obj.dataStatus}" />
                        </p:column>
                        <p:column headerText="Talonario Cheque">
                            <h:outputLabel value="#{obj.talonarioCheque.talao}" />
                        </p:column>
                    </p:dataTable>
                </p:panel>
            </p:outputPanel>

        </p:outputPanel>

    </ui:define>

    <ui:define name="telaInclusaoAlteracao">

        <p:outputPanel id="outputPanelDetalhe">

            <p:outputPanel rendered="#{!chequeController.telaGrid}">
                <p:panel id="panelCentroDetalhe" style="border: none" header="Cheque">

                    <p:outputLabel value="Nenhum registro selecionado."
                        rendered="#{empty chequeController.objeto}" />
                    <p:commandButton value="Voltar"
                        actionListener="#{chequeController.voltar()}"
                        update=":form1:outputPanelGrid,:form1:outputPanelDetalhe"
                        rendered="#{empty chequeController.objeto}" />

                    <p:outputPanel rendered="#{not empty chequeController.objeto}">

                        <div class="t2ti-campo-50">
                            <p:outputLabel value="Talonario Cheque" for="chequeTalonarioCheque" />
                            <br />
                            <p:autoComplete id="chequeTalonarioCheque"
                                value="#{chequeController.objeto.talonarioCheque}"
                                completeMethod="#{chequeController.getListaTalonarioCheque}" var="talonarioCheque"
                                itemLabel="#{talonarioCheque.talao}" itemValue="#{talonarioCheque}"
                                converter="com.t2tierp.model.bean.converter.defaultConverter" forceSelection="true"
                                minQueryLength="3" maxResults="100"
                                required="true" style="width: 100%"
                                emptyMessage="Nenhum registro encontrado" />
                        </div>
                        <t2ti:campoInteiro styleClass="t2ti-campo-10"
                            idComponente="chequeNumero" label="Numero"
                            nomeAtributo="#{chequeController.objeto.numero}" />
                        <t2ti:campoSelect styleClass="t2ti-campo-20"
                            idComponente="chequeStatusCheque" label="Status Cheque"
                            nomeAtributo="#{chequeController.objeto.statusCheque}"
                            itens="#{chequeController.chequeStatus}" />
                        <t2ti:campoData styleClass="t2ti-campo-20"
                            idComponente="chequeDataStatus" label="Data Status"
                            nomeAtributo="#{chequeController.objeto.dataStatus}" />
                    </p:outputPanel>
                    <p:outputPanel rendered="#{not empty chequeController.objeto}" styleClass="t2ti-campo-100" >

                        <p:commandButton value="Incluir"
                            rendered="#{empty chequeController.objeto.id}"
                            actionListener="#{chequeController.salvar}"
                            update=":form1:growl,:form1:outputPanelGrid,:form1:outputPanelDetalhe"
                            disabled="#{!chequeController.podeInserir()}" />
                        <p:commandButton value="Alterar"
                            rendered="#{not empty chequeController.objeto.id}"
                            actionListener="#{chequeController.salvar}"
                            update=":form1:growl,:form1:outputPanelGrid,:form1:outputPanelDetalhe"
                            disabled="#{!chequeController.podeAlterar()}" />
                        <p:commandButton value="Fechar"
                            actionListener="#{chequeController.voltar()}"
                            update=":form1:outputPanelGrid,:form1:outputPanelDetalhe"
                            process="@this" />

                    </p:outputPanel>
                </p:panel>
            </p:outputPanel>

        </p:outputPanel>

    </ui:define>
</ui:composition>
